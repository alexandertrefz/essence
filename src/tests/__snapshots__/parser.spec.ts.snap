// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parser Expressions Combination should parse 2 identifier combinations 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "lhs": {
          "content": "base",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 22,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "Combination",
        "position": {
          "end": {
            "column": 34,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "rhs": {
          "content": "override",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 34,
              "line": 1,
            },
            "start": {
              "column": 26,
              "line": 1,
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 36,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 36,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions FunctionInvocations should parse Identifier FunctionInvocations with more than two arguments 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "arguments": [
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 37,
                  "line": 1,
                },
                "start": {
                  "column": 29,
                  "line": 1,
                },
              },
            },
          },
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument2",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 48,
                  "line": 1,
                },
                "start": {
                  "column": 39,
                  "line": 1,
                },
              },
            },
          },
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument3",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 59,
                  "line": 1,
                },
                "start": {
                  "column": 50,
                  "line": 1,
                },
              },
            },
          },
        ],
        "name": {
          "content": "invocation",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 28,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "FunctionInvocation",
        "position": {
          "end": {
            "column": 60,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 62,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 62,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions FunctionInvocations should parse Identifier FunctionInvocations with more than two arguments and a trailing comma 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "arguments": [
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 37,
                  "line": 1,
                },
                "start": {
                  "column": 29,
                  "line": 1,
                },
              },
            },
          },
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument2",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 48,
                  "line": 1,
                },
                "start": {
                  "column": 39,
                  "line": 1,
                },
              },
            },
          },
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument3",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 59,
                  "line": 1,
                },
                "start": {
                  "column": 50,
                  "line": 1,
                },
              },
            },
          },
        ],
        "name": {
          "content": "invocation",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 28,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "FunctionInvocation",
        "position": {
          "end": {
            "column": 61,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 63,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 63,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions FunctionInvocations should parse Identifier FunctionInvocations with one argument 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "arguments": [
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 37,
                  "line": 1,
                },
                "start": {
                  "column": 29,
                  "line": 1,
                },
              },
            },
          },
        ],
        "name": {
          "content": "invocation",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 28,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "FunctionInvocation",
        "position": {
          "end": {
            "column": 38,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 40,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 40,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions FunctionInvocations should parse Identifier FunctionInvocations with one argument and a trailing comma 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "arguments": [
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 37,
                  "line": 1,
                },
                "start": {
                  "column": 29,
                  "line": 1,
                },
              },
            },
          },
        ],
        "name": {
          "content": "invocation",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 28,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "FunctionInvocation",
        "position": {
          "end": {
            "column": 39,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 41,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 41,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions FunctionInvocations should parse Identifier FunctionInvocations with one labelled argument 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "arguments": [
          {
            "name": {
              "content": "with",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 33,
                  "line": 1,
                },
                "start": {
                  "column": 29,
                  "line": 1,
                },
              },
            },
            "nodeType": "Argument",
            "value": {
              "content": "argument",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 42,
                  "line": 1,
                },
                "start": {
                  "column": 34,
                  "line": 1,
                },
              },
            },
          },
        ],
        "name": {
          "content": "invocation",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 28,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "FunctionInvocation",
        "position": {
          "end": {
            "column": 43,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 45,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 45,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions FunctionInvocations should parse Identifier FunctionInvocations with two arguments 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "arguments": [
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 37,
                  "line": 1,
                },
                "start": {
                  "column": 29,
                  "line": 1,
                },
              },
            },
          },
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument2",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 48,
                  "line": 1,
                },
                "start": {
                  "column": 39,
                  "line": 1,
                },
              },
            },
          },
        ],
        "name": {
          "content": "invocation",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 28,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "FunctionInvocation",
        "position": {
          "end": {
            "column": 49,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 51,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 51,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions FunctionInvocations should parse Identifier FunctionInvocations with two arguments and a trailing comma 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "arguments": [
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 37,
                  "line": 1,
                },
                "start": {
                  "column": 29,
                  "line": 1,
                },
              },
            },
          },
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument2",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 48,
                  "line": 1,
                },
                "start": {
                  "column": 39,
                  "line": 1,
                },
              },
            },
          },
        ],
        "name": {
          "content": "invocation",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 28,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "FunctionInvocation",
        "position": {
          "end": {
            "column": 50,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 52,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 52,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions FunctionInvocations should parse Lookup FunctionInvocations with more than two arguments and a trailing comma 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "arguments": [
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 47,
                  "line": 1,
                },
                "start": {
                  "column": 39,
                  "line": 1,
                },
              },
            },
          },
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument2",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 58,
                  "line": 1,
                },
                "start": {
                  "column": 49,
                  "line": 1,
                },
              },
            },
          },
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument3",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 69,
                  "line": 1,
                },
                "start": {
                  "column": 60,
                  "line": 1,
                },
              },
            },
          },
        ],
        "name": {
          "base": {
            "content": "namespace",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 27,
                "line": 1,
              },
              "start": {
                "column": 18,
                "line": 1,
              },
            },
          },
          "member": {
            "content": "invocation",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 38,
                "line": 1,
              },
              "start": {
                "column": 28,
                "line": 1,
              },
            },
          },
          "nodeType": "Lookup",
          "position": {
            "end": {
              "column": 38,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "FunctionInvocation",
        "position": {
          "end": {
            "column": 71,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 73,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 73,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions FunctionInvocations should parse multiple FunctionInvocations in a row 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "arguments": [
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 26,
                  "line": 2,
                },
                "start": {
                  "column": 18,
                  "line": 2,
                },
              },
            },
          },
        ],
        "name": {
          "content": "invocation",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 17,
              "line": 2,
            },
            "start": {
              "column": 7,
              "line": 2,
            },
          },
        },
        "nodeType": "FunctionInvocation",
        "position": {
          "end": {
            "column": 27,
            "line": 2,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
      },
      {
        "arguments": [
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 26,
                  "line": 3,
                },
                "start": {
                  "column": 18,
                  "line": 3,
                },
              },
            },
          },
        ],
        "name": {
          "content": "invocation",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 17,
              "line": 3,
            },
            "start": {
              "column": 7,
              "line": 3,
            },
          },
        },
        "nodeType": "FunctionInvocation",
        "position": {
          "end": {
            "column": 27,
            "line": 3,
          },
          "start": {
            "column": 7,
            "line": 3,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 4,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 4,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Identifiers should parse Identifiers 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "content": "identifier",
        "nodeType": "Identifier",
        "position": {
          "end": {
            "column": 28,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 30,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 30,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals AnonymousRecordLiteral should parse AnonymousRecordLiterals with a KeyValuePair 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "members": {
          "key": {
            "content": "value",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 31,
                "line": 1,
              },
              "start": {
                "column": 26,
                "line": 1,
              },
            },
          },
        },
        "nodeType": "RecordValue",
        "position": {
          "end": {
            "column": 33,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "type": null,
      },
    ],
    "position": {
      "end": {
        "column": 35,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 35,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals AnonymousRecordLiteral should parse AnonymousRecordLiterals with a KeyValuePair with a trailing comma 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "members": {
          "key": {
            "content": "value",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 31,
                "line": 1,
              },
              "start": {
                "column": 26,
                "line": 1,
              },
            },
          },
        },
        "nodeType": "RecordValue",
        "position": {
          "end": {
            "column": 34,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "type": null,
      },
    ],
    "position": {
      "end": {
        "column": 36,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 36,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals AnonymousRecordLiteral should parse AnonymousRecordLiterals with multiple KeyValuePairs 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "members": {
          "key": {
            "content": "value",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 31,
                "line": 1,
              },
              "start": {
                "column": 26,
                "line": 1,
              },
            },
          },
          "key2": {
            "content": "value2",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 46,
                "line": 1,
              },
              "start": {
                "column": 40,
                "line": 1,
              },
            },
          },
        },
        "nodeType": "RecordValue",
        "position": {
          "end": {
            "column": 48,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "type": null,
      },
    ],
    "position": {
      "end": {
        "column": 50,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 50,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals AnonymousRecordLiteral should parse AnonymousRecordLiterals with multiple KeyValuePairs with a trailing comma 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "members": {
          "key": {
            "content": "value",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 31,
                "line": 1,
              },
              "start": {
                "column": 26,
                "line": 1,
              },
            },
          },
          "key2": {
            "content": "value2",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 46,
                "line": 1,
              },
              "start": {
                "column": 40,
                "line": 1,
              },
            },
          },
        },
        "nodeType": "RecordValue",
        "position": {
          "end": {
            "column": 49,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "type": null,
      },
    ],
    "position": {
      "end": {
        "column": 51,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 51,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals AnonymousRecordLiteral should parse AnonymousRecordLiterals with nested KeyValuePairs 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "members": {
          "key": {
            "members": {
              "key": {
                "content": "value",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 39,
                    "line": 1,
                  },
                  "start": {
                    "column": 34,
                    "line": 1,
                  },
                },
              },
            },
            "nodeType": "RecordValue",
            "position": {
              "end": {
                "column": 41,
                "line": 1,
              },
              "start": {
                "column": 26,
                "line": 1,
              },
            },
            "type": null,
          },
        },
        "nodeType": "RecordValue",
        "position": {
          "end": {
            "column": 43,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "type": null,
      },
    ],
    "position": {
      "end": {
        "column": 45,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 45,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals AnonymousRecordLiteral should parse AnonymousRecordLiterals with nested KeyValuePairs and some Linebreaks 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "members": {
          "key": {
            "members": {
              "key": {
                "content": "value",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 20,
                    "line": 4,
                  },
                  "start": {
                    "column": 15,
                    "line": 4,
                  },
                },
              },
            },
            "nodeType": "RecordValue",
            "position": {
              "end": {
                "column": 9,
                "line": 5,
              },
              "start": {
                "column": 14,
                "line": 3,
              },
            },
            "type": null,
          },
        },
        "nodeType": "RecordValue",
        "position": {
          "end": {
            "column": 8,
            "line": 6,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "type": null,
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 7,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 7,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals BooleanLiterals should parse \`false\` BooleanLiterals 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "BooleanValue",
        "position": {
          "end": {
            "column": 23,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "value": false,
      },
    ],
    "position": {
      "end": {
        "column": 25,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 25,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals BooleanLiterals should parse \`true\` BooleanLiterals 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "BooleanValue",
        "position": {
          "end": {
            "column": 22,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "value": true,
      },
    ],
    "position": {
      "end": {
        "column": 24,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 24,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals FractionLiterals should parse FractionLiterals 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "denominator": "2",
        "nodeType": "FractionValue",
        "numerator": "3",
        "position": {
          "end": {
            "column": 23,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 25,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 25,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals FractionLiterals should parse FractionLiterals with underscores 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "denominator": "9",
        "nodeType": "FractionValue",
        "numerator": "1000",
        "position": {
          "end": {
            "column": 27,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 29,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 29,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals FunctionLiterals should parse FunctionLiterals with no parameters 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "FunctionValue",
        "position": {
          "end": {
            "column": 31,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "value": {
          "body": [],
          "nodeType": "FunctionDefinition",
          "parameters": [],
          "returnType": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 28,
                "line": 1,
              },
              "start": {
                "column": 24,
                "line": 1,
              },
            },
            "type": {
              "content": "Type",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 28,
                  "line": 1,
                },
                "start": {
                  "column": 24,
                  "line": 1,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 33,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 33,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals FunctionLiterals should parse FunctionLiterals with one parameter with explicit external name 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "FunctionValue",
        "position": {
          "end": {
            "column": 8,
            "line": 4,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "value": {
          "body": [
            {
              "expression": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 19,
                    "line": 3,
                  },
                  "start": {
                    "column": 11,
                    "line": 3,
                  },
                },
              },
              "nodeType": "ReturnStatement",
              "position": {
                "end": {
                  "column": 19,
                  "line": 3,
                },
                "start": {
                  "column": 8,
                  "line": 3,
                },
              },
            },
          ],
          "nodeType": "FunctionDefinition",
          "parameters": [
            {
              "externalName": {
                "content": "external",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 16,
                    "line": 2,
                  },
                  "start": {
                    "column": 8,
                    "line": 2,
                  },
                },
              },
              "internalName": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 25,
                    "line": 2,
                  },
                  "start": {
                    "column": 17,
                    "line": 2,
                  },
                },
              },
              "nodeType": "Parameter",
              "position": {
                "end": {
                  "column": 31,
                  "line": 2,
                },
                "start": {
                  "column": 8,
                  "line": 2,
                },
              },
              "type": {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 31,
                    "line": 2,
                  },
                  "start": {
                    "column": 27,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Type",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 31,
                      "line": 2,
                    },
                    "start": {
                      "column": 27,
                      "line": 2,
                    },
                  },
                },
              },
            },
          ],
          "returnType": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 40,
                "line": 2,
              },
              "start": {
                "column": 36,
                "line": 2,
              },
            },
            "type": {
              "content": "Type",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 40,
                  "line": 2,
                },
                "start": {
                  "column": 36,
                  "line": 2,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 5,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 5,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals FunctionLiterals should parse FunctionLiterals with one parameter with implicit external name 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "FunctionValue",
        "position": {
          "end": {
            "column": 8,
            "line": 4,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "value": {
          "body": [
            {
              "expression": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 19,
                    "line": 3,
                  },
                  "start": {
                    "column": 11,
                    "line": 3,
                  },
                },
              },
              "nodeType": "ReturnStatement",
              "position": {
                "end": {
                  "column": 19,
                  "line": 3,
                },
                "start": {
                  "column": 8,
                  "line": 3,
                },
              },
            },
          ],
          "nodeType": "FunctionDefinition",
          "parameters": [
            {
              "externalName": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 16,
                    "line": 2,
                  },
                  "start": {
                    "column": 8,
                    "line": 2,
                  },
                },
              },
              "internalName": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 16,
                    "line": 2,
                  },
                  "start": {
                    "column": 8,
                    "line": 2,
                  },
                },
              },
              "nodeType": "Parameter",
              "position": {
                "end": {
                  "column": 22,
                  "line": 2,
                },
                "start": {
                  "column": 8,
                  "line": 2,
                },
              },
              "type": {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 22,
                    "line": 2,
                  },
                  "start": {
                    "column": 18,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Type",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 22,
                      "line": 2,
                    },
                    "start": {
                      "column": 18,
                      "line": 2,
                    },
                  },
                },
              },
            },
          ],
          "returnType": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 31,
                "line": 2,
              },
              "start": {
                "column": 27,
                "line": 2,
              },
            },
            "type": {
              "content": "Type",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 31,
                  "line": 2,
                },
                "start": {
                  "column": 27,
                  "line": 2,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 5,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 5,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals FunctionLiterals should parse FunctionLiterals with one parameter without external name 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "FunctionValue",
        "position": {
          "end": {
            "column": 8,
            "line": 4,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "value": {
          "body": [
            {
              "expression": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 19,
                    "line": 3,
                  },
                  "start": {
                    "column": 11,
                    "line": 3,
                  },
                },
              },
              "nodeType": "ReturnStatement",
              "position": {
                "end": {
                  "column": 19,
                  "line": 3,
                },
                "start": {
                  "column": 8,
                  "line": 3,
                },
              },
            },
          ],
          "nodeType": "FunctionDefinition",
          "parameters": [
            {
              "externalName": null,
              "internalName": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 18,
                    "line": 2,
                  },
                  "start": {
                    "column": 10,
                    "line": 2,
                  },
                },
              },
              "nodeType": "Parameter",
              "position": {
                "end": {
                  "column": 24,
                  "line": 2,
                },
                "start": {
                  "column": 8,
                  "line": 2,
                },
              },
              "type": {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 24,
                    "line": 2,
                  },
                  "start": {
                    "column": 20,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Type",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 24,
                      "line": 2,
                    },
                    "start": {
                      "column": 20,
                      "line": 2,
                    },
                  },
                },
              },
            },
          ],
          "returnType": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 33,
                "line": 2,
              },
              "start": {
                "column": 29,
                "line": 2,
              },
            },
            "type": {
              "content": "Type",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 33,
                  "line": 2,
                },
                "start": {
                  "column": 29,
                  "line": 2,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 5,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 5,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals FunctionLiterals should parse FunctionLiterals with two parameters 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "FunctionValue",
        "position": {
          "end": {
            "column": 8,
            "line": 4,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "value": {
          "body": [
            {
              "expression": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 19,
                    "line": 3,
                  },
                  "start": {
                    "column": 11,
                    "line": 3,
                  },
                },
              },
              "nodeType": "ReturnStatement",
              "position": {
                "end": {
                  "column": 19,
                  "line": 3,
                },
                "start": {
                  "column": 8,
                  "line": 3,
                },
              },
            },
          ],
          "nodeType": "FunctionDefinition",
          "parameters": [
            {
              "externalName": {
                "content": "external",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 16,
                    "line": 2,
                  },
                  "start": {
                    "column": 8,
                    "line": 2,
                  },
                },
              },
              "internalName": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 25,
                    "line": 2,
                  },
                  "start": {
                    "column": 17,
                    "line": 2,
                  },
                },
              },
              "nodeType": "Parameter",
              "position": {
                "end": {
                  "column": 31,
                  "line": 2,
                },
                "start": {
                  "column": 8,
                  "line": 2,
                },
              },
              "type": {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 31,
                    "line": 2,
                  },
                  "start": {
                    "column": 27,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Type",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 31,
                      "line": 2,
                    },
                    "start": {
                      "column": 27,
                      "line": 2,
                    },
                  },
                },
              },
            },
            {
              "externalName": {
                "content": "external2",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 42,
                    "line": 2,
                  },
                  "start": {
                    "column": 33,
                    "line": 2,
                  },
                },
              },
              "internalName": {
                "content": "internal2",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 52,
                    "line": 2,
                  },
                  "start": {
                    "column": 43,
                    "line": 2,
                  },
                },
              },
              "nodeType": "Parameter",
              "position": {
                "end": {
                  "column": 58,
                  "line": 2,
                },
                "start": {
                  "column": 33,
                  "line": 2,
                },
              },
              "type": {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 58,
                    "line": 2,
                  },
                  "start": {
                    "column": 54,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Type",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 58,
                      "line": 2,
                    },
                    "start": {
                      "column": 54,
                      "line": 2,
                    },
                  },
                },
              },
            },
          ],
          "returnType": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 67,
                "line": 2,
              },
              "start": {
                "column": 63,
                "line": 2,
              },
            },
            "type": {
              "content": "Type",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 67,
                  "line": 2,
                },
                "start": {
                  "column": 63,
                  "line": 2,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 5,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 5,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals GenericFunctionLiterals should parse FunctionLiterals with two parameters 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "FunctionValue",
        "position": {
          "end": {
            "column": 8,
            "line": 4,
          },
          "start": {
            "column": 16,
            "line": 2,
          },
        },
        "value": {
          "body": [
            {
              "expression": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 19,
                    "line": 3,
                  },
                  "start": {
                    "column": 11,
                    "line": 3,
                  },
                },
              },
              "nodeType": "ReturnStatement",
              "position": {
                "end": {
                  "column": 19,
                  "line": 3,
                },
                "start": {
                  "column": 8,
                  "line": 3,
                },
              },
            },
          ],
          "generics": [
            {
              "defaultType": null,
              "name": {
                "content": "Generic",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 15,
                    "line": 2,
                  },
                  "start": {
                    "column": 8,
                    "line": 2,
                  },
                },
              },
              "nodeType": "GenericDeclarationNode",
              "position": {
                "end": {
                  "column": 15,
                  "line": 2,
                },
                "start": {
                  "column": 8,
                  "line": 2,
                },
              },
            },
          ],
          "nodeType": "GenericFunctionDefinition",
          "parameters": [
            {
              "externalName": {
                "content": "external",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 25,
                    "line": 2,
                  },
                  "start": {
                    "column": 17,
                    "line": 2,
                  },
                },
              },
              "internalName": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 34,
                    "line": 2,
                  },
                  "start": {
                    "column": 26,
                    "line": 2,
                  },
                },
              },
              "nodeType": "Parameter",
              "position": {
                "end": {
                  "column": 43,
                  "line": 2,
                },
                "start": {
                  "column": 17,
                  "line": 2,
                },
              },
              "type": {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 43,
                    "line": 2,
                  },
                  "start": {
                    "column": 36,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Generic",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 43,
                      "line": 2,
                    },
                    "start": {
                      "column": 36,
                      "line": 2,
                    },
                  },
                },
              },
            },
            {
              "externalName": {
                "content": "external2",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 54,
                    "line": 2,
                  },
                  "start": {
                    "column": 45,
                    "line": 2,
                  },
                },
              },
              "internalName": {
                "content": "internal2",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 64,
                    "line": 2,
                  },
                  "start": {
                    "column": 55,
                    "line": 2,
                  },
                },
              },
              "nodeType": "Parameter",
              "position": {
                "end": {
                  "column": 73,
                  "line": 2,
                },
                "start": {
                  "column": 45,
                  "line": 2,
                },
              },
              "type": {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 73,
                    "line": 2,
                  },
                  "start": {
                    "column": 66,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Generic",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 73,
                      "line": 2,
                    },
                    "start": {
                      "column": 66,
                      "line": 2,
                    },
                  },
                },
              },
            },
          ],
          "returnType": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 85,
                "line": 2,
              },
              "start": {
                "column": 78,
                "line": 2,
              },
            },
            "type": {
              "content": "Generic",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 85,
                  "line": 2,
                },
                "start": {
                  "column": 78,
                  "line": 2,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 5,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 5,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals GenericFunctionLiterals should parse GenericFunctionLiterals with no parameters 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "FunctionValue",
        "position": {
          "end": {
            "column": 43,
            "line": 1,
          },
          "start": {
            "column": 27,
            "line": 1,
          },
        },
        "value": {
          "body": [],
          "generics": [
            {
              "defaultType": null,
              "name": {
                "content": "Generic",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 26,
                    "line": 1,
                  },
                  "start": {
                    "column": 19,
                    "line": 1,
                  },
                },
              },
              "nodeType": "GenericDeclarationNode",
              "position": {
                "end": {
                  "column": 26,
                  "line": 1,
                },
                "start": {
                  "column": 19,
                  "line": 1,
                },
              },
            },
          ],
          "nodeType": "GenericFunctionDefinition",
          "parameters": [],
          "returnType": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 40,
                "line": 1,
              },
              "start": {
                "column": 33,
                "line": 1,
              },
            },
            "type": {
              "content": "Generic",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 40,
                  "line": 1,
                },
                "start": {
                  "column": 33,
                  "line": 1,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 45,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 45,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals GenericFunctionLiterals should parse GenericFunctionLiterals with one parameter with explicit external name 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "FunctionValue",
        "position": {
          "end": {
            "column": 8,
            "line": 4,
          },
          "start": {
            "column": 16,
            "line": 2,
          },
        },
        "value": {
          "body": [
            {
              "expression": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 19,
                    "line": 3,
                  },
                  "start": {
                    "column": 11,
                    "line": 3,
                  },
                },
              },
              "nodeType": "ReturnStatement",
              "position": {
                "end": {
                  "column": 19,
                  "line": 3,
                },
                "start": {
                  "column": 8,
                  "line": 3,
                },
              },
            },
          ],
          "generics": [
            {
              "defaultType": null,
              "name": {
                "content": "Generic",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 15,
                    "line": 2,
                  },
                  "start": {
                    "column": 8,
                    "line": 2,
                  },
                },
              },
              "nodeType": "GenericDeclarationNode",
              "position": {
                "end": {
                  "column": 15,
                  "line": 2,
                },
                "start": {
                  "column": 8,
                  "line": 2,
                },
              },
            },
          ],
          "nodeType": "GenericFunctionDefinition",
          "parameters": [
            {
              "externalName": {
                "content": "external",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 25,
                    "line": 2,
                  },
                  "start": {
                    "column": 17,
                    "line": 2,
                  },
                },
              },
              "internalName": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 34,
                    "line": 2,
                  },
                  "start": {
                    "column": 26,
                    "line": 2,
                  },
                },
              },
              "nodeType": "Parameter",
              "position": {
                "end": {
                  "column": 43,
                  "line": 2,
                },
                "start": {
                  "column": 17,
                  "line": 2,
                },
              },
              "type": {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 43,
                    "line": 2,
                  },
                  "start": {
                    "column": 36,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Generic",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 43,
                      "line": 2,
                    },
                    "start": {
                      "column": 36,
                      "line": 2,
                    },
                  },
                },
              },
            },
          ],
          "returnType": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 55,
                "line": 2,
              },
              "start": {
                "column": 48,
                "line": 2,
              },
            },
            "type": {
              "content": "Generic",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 55,
                  "line": 2,
                },
                "start": {
                  "column": 48,
                  "line": 2,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 5,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 5,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals GenericFunctionLiterals should parse GenericFunctionLiterals with one parameter with implicit external name 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "FunctionValue",
        "position": {
          "end": {
            "column": 8,
            "line": 4,
          },
          "start": {
            "column": 16,
            "line": 2,
          },
        },
        "value": {
          "body": [
            {
              "expression": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 19,
                    "line": 3,
                  },
                  "start": {
                    "column": 11,
                    "line": 3,
                  },
                },
              },
              "nodeType": "ReturnStatement",
              "position": {
                "end": {
                  "column": 19,
                  "line": 3,
                },
                "start": {
                  "column": 8,
                  "line": 3,
                },
              },
            },
          ],
          "generics": [
            {
              "defaultType": null,
              "name": {
                "content": "Generic",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 15,
                    "line": 2,
                  },
                  "start": {
                    "column": 8,
                    "line": 2,
                  },
                },
              },
              "nodeType": "GenericDeclarationNode",
              "position": {
                "end": {
                  "column": 15,
                  "line": 2,
                },
                "start": {
                  "column": 8,
                  "line": 2,
                },
              },
            },
          ],
          "nodeType": "GenericFunctionDefinition",
          "parameters": [
            {
              "externalName": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 25,
                    "line": 2,
                  },
                  "start": {
                    "column": 17,
                    "line": 2,
                  },
                },
              },
              "internalName": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 25,
                    "line": 2,
                  },
                  "start": {
                    "column": 17,
                    "line": 2,
                  },
                },
              },
              "nodeType": "Parameter",
              "position": {
                "end": {
                  "column": 34,
                  "line": 2,
                },
                "start": {
                  "column": 17,
                  "line": 2,
                },
              },
              "type": {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 34,
                    "line": 2,
                  },
                  "start": {
                    "column": 27,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Generic",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 34,
                      "line": 2,
                    },
                    "start": {
                      "column": 27,
                      "line": 2,
                    },
                  },
                },
              },
            },
          ],
          "returnType": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 46,
                "line": 2,
              },
              "start": {
                "column": 39,
                "line": 2,
              },
            },
            "type": {
              "content": "Generic",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 46,
                  "line": 2,
                },
                "start": {
                  "column": 39,
                  "line": 2,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 5,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 5,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals GenericFunctionLiterals should parse GenericFunctionLiterals with one parameter without external name 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "FunctionValue",
        "position": {
          "end": {
            "column": 8,
            "line": 4,
          },
          "start": {
            "column": 16,
            "line": 2,
          },
        },
        "value": {
          "body": [
            {
              "expression": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 19,
                    "line": 3,
                  },
                  "start": {
                    "column": 11,
                    "line": 3,
                  },
                },
              },
              "nodeType": "ReturnStatement",
              "position": {
                "end": {
                  "column": 19,
                  "line": 3,
                },
                "start": {
                  "column": 8,
                  "line": 3,
                },
              },
            },
          ],
          "generics": [
            {
              "defaultType": null,
              "name": {
                "content": "Generic",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 15,
                    "line": 2,
                  },
                  "start": {
                    "column": 8,
                    "line": 2,
                  },
                },
              },
              "nodeType": "GenericDeclarationNode",
              "position": {
                "end": {
                  "column": 15,
                  "line": 2,
                },
                "start": {
                  "column": 8,
                  "line": 2,
                },
              },
            },
          ],
          "nodeType": "GenericFunctionDefinition",
          "parameters": [
            {
              "externalName": null,
              "internalName": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 27,
                    "line": 2,
                  },
                  "start": {
                    "column": 19,
                    "line": 2,
                  },
                },
              },
              "nodeType": "Parameter",
              "position": {
                "end": {
                  "column": 36,
                  "line": 2,
                },
                "start": {
                  "column": 17,
                  "line": 2,
                },
              },
              "type": {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 36,
                    "line": 2,
                  },
                  "start": {
                    "column": 29,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Generic",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 36,
                      "line": 2,
                    },
                    "start": {
                      "column": 29,
                      "line": 2,
                    },
                  },
                },
              },
            },
          ],
          "returnType": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 48,
                "line": 2,
              },
              "start": {
                "column": 41,
                "line": 2,
              },
            },
            "type": {
              "content": "Generic",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 48,
                  "line": 2,
                },
                "start": {
                  "column": 41,
                  "line": 2,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 5,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 5,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals IntegerLiterals should parse IntegerLiterals 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "IntegerValue",
        "position": {
          "end": {
            "column": 21,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "value": "123",
      },
    ],
    "position": {
      "end": {
        "column": 23,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 23,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals IntegerLiterals should parse IntegerLiterals with an underscore 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "IntegerValue",
        "position": {
          "end": {
            "column": 23,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "value": "1000",
      },
    ],
    "position": {
      "end": {
        "column": 25,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 25,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals IntegerLiterals should parse IntegerLiterals with multiple underscores 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "IntegerValue",
        "position": {
          "end": {
            "column": 27,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "value": "1000000",
      },
    ],
    "position": {
      "end": {
        "column": 29,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 29,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals ListLiterals should parse an List with a single item 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "ListValue",
        "position": {
          "end": {
            "column": 21,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "values": [
          {
            "nodeType": "IntegerValue",
            "position": {
              "end": {
                "column": 20,
                "line": 1,
              },
              "start": {
                "column": 19,
                "line": 1,
              },
            },
            "value": "0",
          },
        ],
      },
    ],
    "position": {
      "end": {
        "column": 23,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 23,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals ListLiterals should parse an List with multiple items 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "ListValue",
        "position": {
          "end": {
            "column": 28,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "values": [
          {
            "nodeType": "IntegerValue",
            "position": {
              "end": {
                "column": 20,
                "line": 1,
              },
              "start": {
                "column": 19,
                "line": 1,
              },
            },
            "value": "0",
          },
          {
            "nodeType": "IntegerValue",
            "position": {
              "end": {
                "column": 23,
                "line": 1,
              },
              "start": {
                "column": 22,
                "line": 1,
              },
            },
            "value": "1",
          },
          {
            "nodeType": "IntegerValue",
            "position": {
              "end": {
                "column": 26,
                "line": 1,
              },
              "start": {
                "column": 25,
                "line": 1,
              },
            },
            "value": "2",
          },
        ],
      },
    ],
    "position": {
      "end": {
        "column": 30,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 30,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals ListLiterals should parse an empty List 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "ListValue",
        "position": {
          "end": {
            "column": 20,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "values": [],
      },
    ],
    "position": {
      "end": {
        "column": 22,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 22,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals StringLiterals should parse empty StringLiterals 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "StringValue",
        "position": {
          "end": {
            "column": 20,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "value": "",
      },
    ],
    "position": {
      "end": {
        "column": 22,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 22,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals StringLiterals should parse filled StringLiterals 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "StringValue",
        "position": {
          "end": {
            "column": 26,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "value": "string",
      },
    ],
    "position": {
      "end": {
        "column": 28,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 28,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals TypedRecordLiterals should parse TypedRecordLiterals with a KeyValuePair 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "members": {
          "key": {
            "content": "value",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 39,
                "line": 1,
              },
              "start": {
                "column": 34,
                "line": 1,
              },
            },
          },
        },
        "nodeType": "RecordValue",
        "position": {
          "end": {
            "column": 41,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "type": {
          "nodeType": "IdentifierTypeDeclaration",
          "position": {
            "end": {
              "column": 22,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
          "type": {
            "content": "Type",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 22,
                "line": 1,
              },
              "start": {
                "column": 18,
                "line": 1,
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 43,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 43,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals TypedRecordLiterals should parse TypedRecordLiterals with a KeyValuePair with a trailing comma 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "members": {
          "key": {
            "content": "value",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 39,
                "line": 1,
              },
              "start": {
                "column": 34,
                "line": 1,
              },
            },
          },
        },
        "nodeType": "RecordValue",
        "position": {
          "end": {
            "column": 42,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "type": {
          "nodeType": "IdentifierTypeDeclaration",
          "position": {
            "end": {
              "column": 22,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
          "type": {
            "content": "Type",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 22,
                "line": 1,
              },
              "start": {
                "column": 18,
                "line": 1,
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 44,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 44,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals TypedRecordLiterals should parse TypedRecordLiterals with multiple KeyValuePairs 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "members": {
          "key": {
            "content": "value",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 39,
                "line": 1,
              },
              "start": {
                "column": 34,
                "line": 1,
              },
            },
          },
          "key2": {
            "content": "value2",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 54,
                "line": 1,
              },
              "start": {
                "column": 48,
                "line": 1,
              },
            },
          },
        },
        "nodeType": "RecordValue",
        "position": {
          "end": {
            "column": 56,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "type": {
          "nodeType": "IdentifierTypeDeclaration",
          "position": {
            "end": {
              "column": 22,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
          "type": {
            "content": "Type",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 22,
                "line": 1,
              },
              "start": {
                "column": 18,
                "line": 1,
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 58,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 58,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals TypedRecordLiterals should parse TypedRecordLiterals with multiple KeyValuePairs with a trailing comma 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "members": {
          "key": {
            "content": "value",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 39,
                "line": 1,
              },
              "start": {
                "column": 34,
                "line": 1,
              },
            },
          },
          "key2": {
            "content": "value2",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 54,
                "line": 1,
              },
              "start": {
                "column": 48,
                "line": 1,
              },
            },
          },
        },
        "nodeType": "RecordValue",
        "position": {
          "end": {
            "column": 57,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "type": {
          "nodeType": "IdentifierTypeDeclaration",
          "position": {
            "end": {
              "column": 22,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
          "type": {
            "content": "Type",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 22,
                "line": 1,
              },
              "start": {
                "column": 18,
                "line": 1,
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 59,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 59,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Literals TypedRecordLiterals should parse TypedRecordLiterals with nested KeyValuePairs and some Linebreaks 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "members": {
          "key": {
            "members": {
              "key": {
                "content": "value",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 20,
                    "line": 4,
                  },
                  "start": {
                    "column": 15,
                    "line": 4,
                  },
                },
              },
            },
            "nodeType": "RecordValue",
            "position": {
              "end": {
                "column": 9,
                "line": 5,
              },
              "start": {
                "column": 14,
                "line": 3,
              },
            },
            "type": {
              "nodeType": "IdentifierTypeDeclaration",
              "position": {
                "end": {
                  "column": 18,
                  "line": 3,
                },
                "start": {
                  "column": 14,
                  "line": 3,
                },
              },
              "type": {
                "content": "Type",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 18,
                    "line": 3,
                  },
                  "start": {
                    "column": 14,
                    "line": 3,
                  },
                },
              },
            },
          },
        },
        "nodeType": "RecordValue",
        "position": {
          "end": {
            "column": 8,
            "line": 6,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "type": {
          "nodeType": "IdentifierTypeDeclaration",
          "position": {
            "end": {
              "column": 11,
              "line": 2,
            },
            "start": {
              "column": 7,
              "line": 2,
            },
          },
          "type": {
            "content": "Type",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 11,
                "line": 2,
              },
              "start": {
                "column": 7,
                "line": 2,
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 7,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 7,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Lookups should parse complex Lookup 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "base": {
          "base": {
            "content": "lookup",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 24,
                "line": 1,
              },
              "start": {
                "column": 18,
                "line": 1,
              },
            },
          },
          "member": {
            "content": "member1",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 32,
                "line": 1,
              },
              "start": {
                "column": 25,
                "line": 1,
              },
            },
          },
          "nodeType": "Lookup",
          "position": {
            "end": {
              "column": 32,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "member": {
          "content": "member2",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 40,
              "line": 1,
            },
            "start": {
              "column": 33,
              "line": 1,
            },
          },
        },
        "nodeType": "Lookup",
        "position": {
          "end": {
            "column": 40,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 42,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 42,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Lookups should parse simple Lookup 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "base": {
          "content": "lookup",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 24,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "member": {
          "content": "member",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 31,
              "line": 1,
            },
            "start": {
              "column": 25,
              "line": 1,
            },
          },
        },
        "nodeType": "Lookup",
        "position": {
          "end": {
            "column": 31,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 33,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 33,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Match should parse match expression with function invocation 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "handlers": [
          {
            "body": [
              {
                "expression": {
                  "nodeType": "IntegerValue",
                  "position": {
                    "end": {
                      "column": 13,
                      "line": 4,
                    },
                    "start": {
                      "column": 12,
                      "line": 4,
                    },
                  },
                  "value": "1",
                },
                "nodeType": "ReturnStatement",
                "position": {
                  "end": {
                    "column": 13,
                    "line": 4,
                  },
                  "start": {
                    "column": 9,
                    "line": 4,
                  },
                },
              },
            ],
            "matcher": {
              "nodeType": "IdentifierTypeDeclaration",
              "position": {
                "end": {
                  "column": 20,
                  "line": 3,
                },
                "start": {
                  "column": 13,
                  "line": 3,
                },
              },
              "type": {
                "content": "Integer",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 20,
                    "line": 3,
                  },
                  "start": {
                    "column": 13,
                    "line": 3,
                  },
                },
              },
            },
            "returnType": {
              "nodeType": "IdentifierTypeDeclaration",
              "position": {
                "end": {
                  "column": 31,
                  "line": 3,
                },
                "start": {
                  "column": 24,
                  "line": 3,
                },
              },
              "type": {
                "content": "Integer",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 31,
                    "line": 3,
                  },
                  "start": {
                    "column": 24,
                    "line": 3,
                  },
                },
              },
            },
          },
          {
            "body": [
              {
                "expression": {
                  "nodeType": "IntegerValue",
                  "position": {
                    "end": {
                      "column": 13,
                      "line": 8,
                    },
                    "start": {
                      "column": 12,
                      "line": 8,
                    },
                  },
                  "value": "2",
                },
                "nodeType": "ReturnStatement",
                "position": {
                  "end": {
                    "column": 13,
                    "line": 8,
                  },
                  "start": {
                    "column": 9,
                    "line": 8,
                  },
                },
              },
            ],
            "matcher": {
              "nodeType": "IdentifierTypeDeclaration",
              "position": {
                "end": {
                  "column": 21,
                  "line": 7,
                },
                "start": {
                  "column": 13,
                  "line": 7,
                },
              },
              "type": {
                "content": "Fraction",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 21,
                    "line": 7,
                  },
                  "start": {
                    "column": 13,
                    "line": 7,
                  },
                },
              },
            },
            "returnType": {
              "nodeType": "IdentifierTypeDeclaration",
              "position": {
                "end": {
                  "column": 32,
                  "line": 7,
                },
                "start": {
                  "column": 25,
                  "line": 7,
                },
              },
              "type": {
                "content": "Integer",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 32,
                    "line": 7,
                  },
                  "start": {
                    "column": 25,
                    "line": 7,
                  },
                },
              },
            },
          },
        ],
        "nodeType": "Match",
        "position": {
          "end": {
            "column": 8,
            "line": 10,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "value": {
          "arguments": [],
          "name": {
            "content": "expression",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 23,
                "line": 2,
              },
              "start": {
                "column": 13,
                "line": 2,
              },
            },
          },
          "nodeType": "FunctionInvocation",
          "position": {
            "end": {
              "column": 25,
              "line": 2,
            },
            "start": {
              "column": 13,
              "line": 2,
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 11,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 11,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions MethodInvocations should parse MethodInvocation 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "arguments": [
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 41,
                  "line": 1,
                },
                "start": {
                  "column": 33,
                  "line": 1,
                },
              },
            },
          },
        ],
        "name": {
          "base": {
            "content": "lookup",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 24,
                "line": 1,
              },
              "start": {
                "column": 18,
                "line": 1,
              },
            },
          },
          "member": {
            "content": "member",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 32,
                "line": 1,
              },
              "start": {
                "column": 26,
                "line": 1,
              },
            },
          },
          "nodeType": "MethodLookup",
          "position": {
            "end": {
              "column": 32,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "MethodInvocation",
        "position": {
          "end": {
            "column": 42,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 44,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 44,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions MethodInvocations should parse MethodInvocation with 0 external parameters 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "arguments": [],
        "name": {
          "base": {
            "content": "lookup",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 24,
                "line": 1,
              },
              "start": {
                "column": 18,
                "line": 1,
              },
            },
          },
          "member": {
            "content": "member",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 32,
                "line": 1,
              },
              "start": {
                "column": 26,
                "line": 1,
              },
            },
          },
          "nodeType": "MethodLookup",
          "position": {
            "end": {
              "column": 32,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "MethodInvocation",
        "position": {
          "end": {
            "column": 34,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 36,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 36,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions MethodInvocations should parse chained MethodInvocations 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "arguments": [
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 59,
                  "line": 1,
                },
                "start": {
                  "column": 51,
                  "line": 1,
                },
              },
            },
          },
        ],
        "name": {
          "base": {
            "arguments": [
              {
                "name": null,
                "nodeType": "Argument",
                "value": {
                  "content": "argument",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 41,
                      "line": 1,
                    },
                    "start": {
                      "column": 33,
                      "line": 1,
                    },
                  },
                },
              },
            ],
            "name": {
              "base": {
                "content": "lookup",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 24,
                    "line": 1,
                  },
                  "start": {
                    "column": 18,
                    "line": 1,
                  },
                },
              },
              "member": {
                "content": "member",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 32,
                    "line": 1,
                  },
                  "start": {
                    "column": 26,
                    "line": 1,
                  },
                },
              },
              "nodeType": "MethodLookup",
              "position": {
                "end": {
                  "column": 32,
                  "line": 1,
                },
                "start": {
                  "column": 18,
                  "line": 1,
                },
              },
            },
            "nodeType": "MethodInvocation",
            "position": {
              "end": {
                "column": 42,
                "line": 1,
              },
              "start": {
                "column": 18,
                "line": 1,
              },
            },
          },
          "member": {
            "content": "member",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 50,
                "line": 1,
              },
              "start": {
                "column": 44,
                "line": 1,
              },
            },
          },
          "nodeType": "MethodLookup",
          "position": {
            "end": {
              "column": 50,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "MethodInvocation",
        "position": {
          "end": {
            "column": 60,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 62,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 62,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions MethodLookups should parse Identifier MethodLookups 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "base": {
          "content": "identifier",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 28,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "member": {
          "content": "member",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 36,
              "line": 1,
            },
            "start": {
              "column": 30,
              "line": 1,
            },
          },
        },
        "nodeType": "MethodLookup",
        "position": {
          "end": {
            "column": 36,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 38,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 38,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions MethodLookups should parse Lookup MethodLookups 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "base": {
          "base": {
            "content": "identifier",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 28,
                "line": 1,
              },
              "start": {
                "column": 18,
                "line": 1,
              },
            },
          },
          "member": {
            "content": "lookup",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 35,
                "line": 1,
              },
              "start": {
                "column": 29,
                "line": 1,
              },
            },
          },
          "nodeType": "Lookup",
          "position": {
            "end": {
              "column": 35,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "member": {
          "content": "member",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 43,
              "line": 1,
            },
            "start": {
              "column": 37,
              "line": 1,
            },
          },
        },
        "nodeType": "MethodLookup",
        "position": {
          "end": {
            "column": 43,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 45,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 45,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions NativeInvocations should parse NativeFunctionInvocation with multiple arguments 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "arguments": [
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 35,
                  "line": 1,
                },
                "start": {
                  "column": 27,
                  "line": 1,
                },
              },
            },
          },
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument2",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 46,
                  "line": 1,
                },
                "start": {
                  "column": 37,
                  "line": 1,
                },
              },
            },
          },
        ],
        "name": {
          "content": "__lookup",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 26,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "NativeFunctionInvocation",
        "position": {
          "end": {
            "column": 47,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 49,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 49,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions NativeInvocations should parse NativeFunctionInvocation with multiple arguments with trailing comma 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "arguments": [
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 35,
                  "line": 1,
                },
                "start": {
                  "column": 27,
                  "line": 1,
                },
              },
            },
          },
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument2",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 46,
                  "line": 1,
                },
                "start": {
                  "column": 37,
                  "line": 1,
                },
              },
            },
          },
        ],
        "name": {
          "content": "__lookup",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 26,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "NativeFunctionInvocation",
        "position": {
          "end": {
            "column": 48,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 50,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 50,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions NativeInvocations should parse NativeFunctionInvocation with one argument 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "arguments": [
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "arguments",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 36,
                  "line": 1,
                },
                "start": {
                  "column": 27,
                  "line": 1,
                },
              },
            },
          },
        ],
        "name": {
          "content": "__lookup",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 26,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "NativeFunctionInvocation",
        "position": {
          "end": {
            "column": 37,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 39,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 39,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions NativeInvocations should parse NativeFunctionInvocation with one argument with trailing comma 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "arguments": [
          {
            "name": null,
            "nodeType": "Argument",
            "value": {
              "content": "argument",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 35,
                  "line": 1,
                },
                "start": {
                  "column": 27,
                  "line": 1,
                },
              },
            },
          },
        ],
        "name": {
          "content": "__lookup",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 26,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "NativeFunctionInvocation",
        "position": {
          "end": {
            "column": 37,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 39,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 39,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Expressions Self should parse @ 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "nodeType": "Self",
        "position": {
          "end": {
            "column": 19,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 21,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 21,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements ConstantDeclarationStatements should parse ConstantDeclarationStatement with List Type 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "name": {
          "content": "identifiers",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 38,
              "line": 1,
            },
            "start": {
              "column": 27,
              "line": 1,
            },
          },
        },
        "nodeType": "ConstantDeclarationStatement",
        "position": {
          "end": {
            "column": 53,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "type": {
          "nodeType": "ListTypeDeclaration",
          "position": {
            "end": {
              "column": 48,
              "line": 1,
            },
            "start": {
              "column": 40,
              "line": 1,
            },
          },
          "type": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 47,
                "line": 1,
              },
              "start": {
                "column": 41,
                "line": 1,
              },
            },
            "type": {
              "content": "String",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 47,
                  "line": 1,
                },
                "start": {
                  "column": 41,
                  "line": 1,
                },
              },
            },
          },
        },
        "value": {
          "nodeType": "ListValue",
          "position": {
            "end": {
              "column": 53,
              "line": 1,
            },
            "start": {
              "column": 51,
              "line": 1,
            },
          },
          "values": [],
        },
      },
    ],
    "position": {
      "end": {
        "column": 55,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 55,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements ConstantDeclarationStatements should parse ConstantDeclarationStatement with Type 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "name": {
          "content": "identifier",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 37,
              "line": 1,
            },
            "start": {
              "column": 27,
              "line": 1,
            },
          },
        },
        "nodeType": "ConstantDeclarationStatement",
        "position": {
          "end": {
            "column": 50,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "type": {
          "nodeType": "IdentifierTypeDeclaration",
          "position": {
            "end": {
              "column": 45,
              "line": 1,
            },
            "start": {
              "column": 39,
              "line": 1,
            },
          },
          "type": {
            "content": "String",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 45,
                "line": 1,
              },
              "start": {
                "column": 39,
                "line": 1,
              },
            },
          },
        },
        "value": {
          "nodeType": "StringValue",
          "position": {
            "end": {
              "column": 50,
              "line": 1,
            },
            "start": {
              "column": 48,
              "line": 1,
            },
          },
          "value": "",
        },
      },
    ],
    "position": {
      "end": {
        "column": 52,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 52,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements ConstantDeclarationStatements should parse ConstantDeclarationStatement without Type 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "name": {
          "content": "identifier",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 37,
              "line": 1,
            },
            "start": {
              "column": 27,
              "line": 1,
            },
          },
        },
        "nodeType": "ConstantDeclarationStatement",
        "position": {
          "end": {
            "column": 42,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "type": null,
        "value": {
          "nodeType": "StringValue",
          "position": {
            "end": {
              "column": 42,
              "line": 1,
            },
            "start": {
              "column": 40,
              "line": 1,
            },
          },
          "value": "",
        },
      },
    ],
    "position": {
      "end": {
        "column": 44,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 44,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements FunctionStatements should parse FunctionLiterals with one parameter with explicit external name 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "name": {
          "content": "name",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 20,
              "line": 2,
            },
            "start": {
              "column": 16,
              "line": 2,
            },
          },
        },
        "nodeType": "FunctionStatement",
        "position": {
          "end": {
            "column": 8,
            "line": 4,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "value": {
          "body": [
            {
              "expression": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 19,
                    "line": 3,
                  },
                  "start": {
                    "column": 11,
                    "line": 3,
                  },
                },
              },
              "nodeType": "ReturnStatement",
              "position": {
                "end": {
                  "column": 19,
                  "line": 3,
                },
                "start": {
                  "column": 8,
                  "line": 3,
                },
              },
            },
          ],
          "nodeType": "FunctionDefinition",
          "parameters": [
            {
              "externalName": {
                "content": "external",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 30,
                    "line": 2,
                  },
                  "start": {
                    "column": 22,
                    "line": 2,
                  },
                },
              },
              "internalName": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 39,
                    "line": 2,
                  },
                  "start": {
                    "column": 31,
                    "line": 2,
                  },
                },
              },
              "nodeType": "Parameter",
              "position": {
                "end": {
                  "column": 45,
                  "line": 2,
                },
                "start": {
                  "column": 22,
                  "line": 2,
                },
              },
              "type": {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 45,
                    "line": 2,
                  },
                  "start": {
                    "column": 41,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Type",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 45,
                      "line": 2,
                    },
                    "start": {
                      "column": 41,
                      "line": 2,
                    },
                  },
                },
              },
            },
          ],
          "returnType": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 54,
                "line": 2,
              },
              "start": {
                "column": 50,
                "line": 2,
              },
            },
            "type": {
              "content": "Type",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 54,
                  "line": 2,
                },
                "start": {
                  "column": 50,
                  "line": 2,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 5,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 5,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements FunctionStatements should parse FunctionLiterals with one parameter with implicit external name 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "name": {
          "content": "name",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 20,
              "line": 2,
            },
            "start": {
              "column": 16,
              "line": 2,
            },
          },
        },
        "nodeType": "FunctionStatement",
        "position": {
          "end": {
            "column": 8,
            "line": 4,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "value": {
          "body": [
            {
              "expression": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 19,
                    "line": 3,
                  },
                  "start": {
                    "column": 11,
                    "line": 3,
                  },
                },
              },
              "nodeType": "ReturnStatement",
              "position": {
                "end": {
                  "column": 19,
                  "line": 3,
                },
                "start": {
                  "column": 8,
                  "line": 3,
                },
              },
            },
          ],
          "nodeType": "FunctionDefinition",
          "parameters": [
            {
              "externalName": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 30,
                    "line": 2,
                  },
                  "start": {
                    "column": 22,
                    "line": 2,
                  },
                },
              },
              "internalName": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 30,
                    "line": 2,
                  },
                  "start": {
                    "column": 22,
                    "line": 2,
                  },
                },
              },
              "nodeType": "Parameter",
              "position": {
                "end": {
                  "column": 36,
                  "line": 2,
                },
                "start": {
                  "column": 22,
                  "line": 2,
                },
              },
              "type": {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 36,
                    "line": 2,
                  },
                  "start": {
                    "column": 32,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Type",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 36,
                      "line": 2,
                    },
                    "start": {
                      "column": 32,
                      "line": 2,
                    },
                  },
                },
              },
            },
          ],
          "returnType": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 45,
                "line": 2,
              },
              "start": {
                "column": 41,
                "line": 2,
              },
            },
            "type": {
              "content": "Type",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 45,
                  "line": 2,
                },
                "start": {
                  "column": 41,
                  "line": 2,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 5,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 5,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements FunctionStatements should parse FunctionLiterals with one parameter without external name 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "name": {
          "content": "name",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 20,
              "line": 2,
            },
            "start": {
              "column": 16,
              "line": 2,
            },
          },
        },
        "nodeType": "FunctionStatement",
        "position": {
          "end": {
            "column": 8,
            "line": 4,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "value": {
          "body": [
            {
              "expression": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 19,
                    "line": 3,
                  },
                  "start": {
                    "column": 11,
                    "line": 3,
                  },
                },
              },
              "nodeType": "ReturnStatement",
              "position": {
                "end": {
                  "column": 19,
                  "line": 3,
                },
                "start": {
                  "column": 8,
                  "line": 3,
                },
              },
            },
          ],
          "nodeType": "FunctionDefinition",
          "parameters": [
            {
              "externalName": null,
              "internalName": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 32,
                    "line": 2,
                  },
                  "start": {
                    "column": 24,
                    "line": 2,
                  },
                },
              },
              "nodeType": "Parameter",
              "position": {
                "end": {
                  "column": 38,
                  "line": 2,
                },
                "start": {
                  "column": 22,
                  "line": 2,
                },
              },
              "type": {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 38,
                    "line": 2,
                  },
                  "start": {
                    "column": 34,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Type",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 38,
                      "line": 2,
                    },
                    "start": {
                      "column": 34,
                      "line": 2,
                    },
                  },
                },
              },
            },
          ],
          "returnType": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 47,
                "line": 2,
              },
              "start": {
                "column": 43,
                "line": 2,
              },
            },
            "type": {
              "content": "Type",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 47,
                  "line": 2,
                },
                "start": {
                  "column": 43,
                  "line": 2,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 5,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 5,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements FunctionStatements should parse FunctionLiterals with two parameters 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "name": {
          "content": "name",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 20,
              "line": 2,
            },
            "start": {
              "column": 16,
              "line": 2,
            },
          },
        },
        "nodeType": "FunctionStatement",
        "position": {
          "end": {
            "column": 8,
            "line": 4,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "value": {
          "body": [
            {
              "expression": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 19,
                    "line": 3,
                  },
                  "start": {
                    "column": 11,
                    "line": 3,
                  },
                },
              },
              "nodeType": "ReturnStatement",
              "position": {
                "end": {
                  "column": 19,
                  "line": 3,
                },
                "start": {
                  "column": 8,
                  "line": 3,
                },
              },
            },
          ],
          "nodeType": "FunctionDefinition",
          "parameters": [
            {
              "externalName": {
                "content": "external",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 30,
                    "line": 2,
                  },
                  "start": {
                    "column": 22,
                    "line": 2,
                  },
                },
              },
              "internalName": {
                "content": "internal",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 39,
                    "line": 2,
                  },
                  "start": {
                    "column": 31,
                    "line": 2,
                  },
                },
              },
              "nodeType": "Parameter",
              "position": {
                "end": {
                  "column": 45,
                  "line": 2,
                },
                "start": {
                  "column": 22,
                  "line": 2,
                },
              },
              "type": {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 45,
                    "line": 2,
                  },
                  "start": {
                    "column": 41,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Type",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 45,
                      "line": 2,
                    },
                    "start": {
                      "column": 41,
                      "line": 2,
                    },
                  },
                },
              },
            },
            {
              "externalName": {
                "content": "external2",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 56,
                    "line": 2,
                  },
                  "start": {
                    "column": 47,
                    "line": 2,
                  },
                },
              },
              "internalName": {
                "content": "internal2",
                "nodeType": "Identifier",
                "position": {
                  "end": {
                    "column": 66,
                    "line": 2,
                  },
                  "start": {
                    "column": 57,
                    "line": 2,
                  },
                },
              },
              "nodeType": "Parameter",
              "position": {
                "end": {
                  "column": 72,
                  "line": 2,
                },
                "start": {
                  "column": 47,
                  "line": 2,
                },
              },
              "type": {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 72,
                    "line": 2,
                  },
                  "start": {
                    "column": 68,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Type",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 72,
                      "line": 2,
                    },
                    "start": {
                      "column": 68,
                      "line": 2,
                    },
                  },
                },
              },
            },
          ],
          "returnType": {
            "nodeType": "UnionTypeDeclaration",
            "position": {
              "end": {
                "column": 89,
                "line": 2,
              },
              "start": {
                "column": 77,
                "line": 2,
              },
            },
            "types": [
              {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 81,
                    "line": 2,
                  },
                  "start": {
                    "column": 77,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Type",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 81,
                      "line": 2,
                    },
                    "start": {
                      "column": 77,
                      "line": 2,
                    },
                  },
                },
              },
              {
                "nodeType": "IdentifierTypeDeclaration",
                "position": {
                  "end": {
                    "column": 89,
                    "line": 2,
                  },
                  "start": {
                    "column": 84,
                    "line": 2,
                  },
                },
                "type": {
                  "content": "Type1",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 89,
                      "line": 2,
                    },
                    "start": {
                      "column": 84,
                      "line": 2,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 5,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 5,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements FunctionStatements should parse FunctionStatements with no parameters 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "name": {
          "content": "name",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 31,
              "line": 1,
            },
            "start": {
              "column": 27,
              "line": 1,
            },
          },
        },
        "nodeType": "FunctionStatement",
        "position": {
          "end": {
            "column": 45,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "value": {
          "body": [],
          "nodeType": "FunctionDefinition",
          "parameters": [],
          "returnType": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 42,
                "line": 1,
              },
              "start": {
                "column": 38,
                "line": 1,
              },
            },
            "type": {
              "content": "Type",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 42,
                  "line": 1,
                },
                "start": {
                  "column": 38,
                  "line": 1,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 47,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 47,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements IfStatements should parse IfElse-If-Statements 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "condition": {
          "content": "identifier",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 31,
              "line": 1,
            },
            "start": {
              "column": 21,
              "line": 1,
            },
          },
        },
        "falseBody": [
          {
            "body": [],
            "condition": {
              "content": "identifier2",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 54,
                  "line": 1,
                },
                "start": {
                  "column": 43,
                  "line": 1,
                },
              },
            },
            "nodeType": "IfStatement",
            "position": {
              "end": {
                "column": 57,
                "line": 1,
              },
              "start": {
                "column": 40,
                "line": 1,
              },
            },
          },
        ],
        "nodeType": "IfElseStatement",
        "position": {
          "end": {
            "column": 57,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "trueBody": [],
      },
    ],
    "position": {
      "end": {
        "column": 59,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 59,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements IfStatements should parse IfElse-IfElse-If-Statements 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "condition": {
          "content": "identifier",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 31,
              "line": 1,
            },
            "start": {
              "column": 21,
              "line": 1,
            },
          },
        },
        "falseBody": [
          {
            "condition": {
              "content": "identifier2",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 54,
                  "line": 1,
                },
                "start": {
                  "column": 43,
                  "line": 1,
                },
              },
            },
            "falseBody": [
              {
                "body": [],
                "condition": {
                  "content": "identifier3",
                  "nodeType": "Identifier",
                  "position": {
                    "end": {
                      "column": 77,
                      "line": 1,
                    },
                    "start": {
                      "column": 66,
                      "line": 1,
                    },
                  },
                },
                "nodeType": "IfStatement",
                "position": {
                  "end": {
                    "column": 80,
                    "line": 1,
                  },
                  "start": {
                    "column": 63,
                    "line": 1,
                  },
                },
              },
            ],
            "nodeType": "IfElseStatement",
            "position": {
              "end": {
                "column": 80,
                "line": 1,
              },
              "start": {
                "column": 40,
                "line": 1,
              },
            },
            "trueBody": [],
          },
        ],
        "nodeType": "IfElseStatement",
        "position": {
          "end": {
            "column": 80,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "trueBody": [],
      },
    ],
    "position": {
      "end": {
        "column": 82,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 82,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements IfStatements should parse IfElse-IfElse-Statements 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "condition": {
          "content": "identifier",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 31,
              "line": 1,
            },
            "start": {
              "column": 21,
              "line": 1,
            },
          },
        },
        "falseBody": [
          {
            "condition": {
              "content": "identifier2",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 54,
                  "line": 1,
                },
                "start": {
                  "column": 43,
                  "line": 1,
                },
              },
            },
            "falseBody": [],
            "nodeType": "IfElseStatement",
            "position": {
              "end": {
                "column": 65,
                "line": 1,
              },
              "start": {
                "column": 40,
                "line": 1,
              },
            },
            "trueBody": [],
          },
        ],
        "nodeType": "IfElseStatement",
        "position": {
          "end": {
            "column": 65,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "trueBody": [],
      },
    ],
    "position": {
      "end": {
        "column": 67,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 67,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements IfStatements should parse IfElseStatements 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "condition": {
          "content": "identifier",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 31,
              "line": 1,
            },
            "start": {
              "column": 21,
              "line": 1,
            },
          },
        },
        "falseBody": [],
        "nodeType": "IfElseStatement",
        "position": {
          "end": {
            "column": 42,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "trueBody": [],
      },
    ],
    "position": {
      "end": {
        "column": 44,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 44,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements IfStatements should parse IfStatements 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "body": [],
        "condition": {
          "content": "identifier",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 31,
              "line": 1,
            },
            "start": {
              "column": 21,
              "line": 1,
            },
          },
        },
        "nodeType": "IfStatement",
        "position": {
          "end": {
            "column": 34,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 36,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 36,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements ReturnStatements should parse ReturnStatements 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "expression": {
          "content": "identifier",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 31,
              "line": 1,
            },
            "start": {
              "column": 21,
              "line": 1,
            },
          },
        },
        "nodeType": "ReturnStatement",
        "position": {
          "end": {
            "column": 31,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 33,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 33,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements TypeDefinitionStatements should parse TypeDefinitionStatements with Methods and Properties 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "methods": {
          "method": {
            "method": {
              "nodeType": "FunctionValue",
              "position": {
                "end": {
                  "column": 9,
                  "line": 6,
                },
                "start": {
                  "column": 14,
                  "line": 4,
                },
              },
              "value": {
                "body": [
                  {
                    "expression": {
                      "content": "parameter",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 21,
                          "line": 5,
                        },
                        "start": {
                          "column": 12,
                          "line": 5,
                        },
                      },
                    },
                    "nodeType": "ReturnStatement",
                    "position": {
                      "end": {
                        "column": 21,
                        "line": 5,
                      },
                      "start": {
                        "column": 9,
                        "line": 5,
                      },
                    },
                  },
                ],
                "nodeType": "FunctionDefinition",
                "parameters": [
                  {
                    "externalName": {
                      "content": "parameter",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 24,
                          "line": 4,
                        },
                        "start": {
                          "column": 15,
                          "line": 4,
                        },
                      },
                    },
                    "internalName": {
                      "content": "parameter",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 24,
                          "line": 4,
                        },
                        "start": {
                          "column": 15,
                          "line": 4,
                        },
                      },
                    },
                    "nodeType": "Parameter",
                    "position": {
                      "end": {
                        "column": 30,
                        "line": 4,
                      },
                      "start": {
                        "column": 15,
                        "line": 4,
                      },
                    },
                    "type": {
                      "nodeType": "IdentifierTypeDeclaration",
                      "position": {
                        "end": {
                          "column": 30,
                          "line": 4,
                        },
                        "start": {
                          "column": 26,
                          "line": 4,
                        },
                      },
                      "type": {
                        "content": "Type",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 30,
                            "line": 4,
                          },
                          "start": {
                            "column": 26,
                            "line": 4,
                          },
                        },
                      },
                    },
                  },
                ],
                "returnType": {
                  "nodeType": "IdentifierTypeDeclaration",
                  "position": {
                    "end": {
                      "column": 39,
                      "line": 4,
                    },
                    "start": {
                      "column": 35,
                      "line": 4,
                    },
                  },
                  "type": {
                    "content": "Type",
                    "nodeType": "Identifier",
                    "position": {
                      "end": {
                        "column": 39,
                        "line": 4,
                      },
                      "start": {
                        "column": 35,
                        "line": 4,
                      },
                    },
                  },
                },
              },
            },
            "nodeType": "SimpleMethod",
          },
        },
        "name": {
          "content": "Type",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 16,
              "line": 2,
            },
            "start": {
              "column": 12,
              "line": 2,
            },
          },
        },
        "nodeType": "TypeDefinitionStatement",
        "position": {
          "end": {
            "column": 8,
            "line": 7,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "properties": {
          "property": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 30,
                "line": 3,
              },
              "start": {
                "column": 18,
                "line": 3,
              },
            },
            "type": {
              "content": "PropertyType",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 30,
                  "line": 3,
                },
                "start": {
                  "column": 18,
                  "line": 3,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 8,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 8,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements TypeDefinitionStatements should parse TypeDefinitionStatements with multiple Methods 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "methods": {
          "method": {
            "method": {
              "nodeType": "FunctionValue",
              "position": {
                "end": {
                  "column": 9,
                  "line": 5,
                },
                "start": {
                  "column": 14,
                  "line": 3,
                },
              },
              "value": {
                "body": [
                  {
                    "expression": {
                      "content": "parameter",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 21,
                          "line": 4,
                        },
                        "start": {
                          "column": 12,
                          "line": 4,
                        },
                      },
                    },
                    "nodeType": "ReturnStatement",
                    "position": {
                      "end": {
                        "column": 21,
                        "line": 4,
                      },
                      "start": {
                        "column": 9,
                        "line": 4,
                      },
                    },
                  },
                ],
                "nodeType": "FunctionDefinition",
                "parameters": [
                  {
                    "externalName": {
                      "content": "parameter",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 24,
                          "line": 3,
                        },
                        "start": {
                          "column": 15,
                          "line": 3,
                        },
                      },
                    },
                    "internalName": {
                      "content": "parameter",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 24,
                          "line": 3,
                        },
                        "start": {
                          "column": 15,
                          "line": 3,
                        },
                      },
                    },
                    "nodeType": "Parameter",
                    "position": {
                      "end": {
                        "column": 30,
                        "line": 3,
                      },
                      "start": {
                        "column": 15,
                        "line": 3,
                      },
                    },
                    "type": {
                      "nodeType": "IdentifierTypeDeclaration",
                      "position": {
                        "end": {
                          "column": 30,
                          "line": 3,
                        },
                        "start": {
                          "column": 26,
                          "line": 3,
                        },
                      },
                      "type": {
                        "content": "Type",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 30,
                            "line": 3,
                          },
                          "start": {
                            "column": 26,
                            "line": 3,
                          },
                        },
                      },
                    },
                  },
                ],
                "returnType": {
                  "nodeType": "IdentifierTypeDeclaration",
                  "position": {
                    "end": {
                      "column": 39,
                      "line": 3,
                    },
                    "start": {
                      "column": 35,
                      "line": 3,
                    },
                  },
                  "type": {
                    "content": "Type",
                    "nodeType": "Identifier",
                    "position": {
                      "end": {
                        "column": 39,
                        "line": 3,
                      },
                      "start": {
                        "column": 35,
                        "line": 3,
                      },
                    },
                  },
                },
              },
            },
            "nodeType": "SimpleMethod",
          },
          "method2": {
            "method": {
              "nodeType": "FunctionValue",
              "position": {
                "end": {
                  "column": 9,
                  "line": 9,
                },
                "start": {
                  "column": 15,
                  "line": 7,
                },
              },
              "value": {
                "body": [
                  {
                    "expression": {
                      "content": "parameter",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 21,
                          "line": 8,
                        },
                        "start": {
                          "column": 12,
                          "line": 8,
                        },
                      },
                    },
                    "nodeType": "ReturnStatement",
                    "position": {
                      "end": {
                        "column": 21,
                        "line": 8,
                      },
                      "start": {
                        "column": 9,
                        "line": 8,
                      },
                    },
                  },
                ],
                "nodeType": "FunctionDefinition",
                "parameters": [
                  {
                    "externalName": {
                      "content": "parameter",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 25,
                          "line": 7,
                        },
                        "start": {
                          "column": 16,
                          "line": 7,
                        },
                      },
                    },
                    "internalName": {
                      "content": "parameter",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 25,
                          "line": 7,
                        },
                        "start": {
                          "column": 16,
                          "line": 7,
                        },
                      },
                    },
                    "nodeType": "Parameter",
                    "position": {
                      "end": {
                        "column": 31,
                        "line": 7,
                      },
                      "start": {
                        "column": 16,
                        "line": 7,
                      },
                    },
                    "type": {
                      "nodeType": "IdentifierTypeDeclaration",
                      "position": {
                        "end": {
                          "column": 31,
                          "line": 7,
                        },
                        "start": {
                          "column": 27,
                          "line": 7,
                        },
                      },
                      "type": {
                        "content": "Type",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 31,
                            "line": 7,
                          },
                          "start": {
                            "column": 27,
                            "line": 7,
                          },
                        },
                      },
                    },
                  },
                ],
                "returnType": {
                  "nodeType": "IdentifierTypeDeclaration",
                  "position": {
                    "end": {
                      "column": 40,
                      "line": 7,
                    },
                    "start": {
                      "column": 36,
                      "line": 7,
                    },
                  },
                  "type": {
                    "content": "Type",
                    "nodeType": "Identifier",
                    "position": {
                      "end": {
                        "column": 40,
                        "line": 7,
                      },
                      "start": {
                        "column": 36,
                        "line": 7,
                      },
                    },
                  },
                },
              },
            },
            "nodeType": "SimpleMethod",
          },
        },
        "name": {
          "content": "Type",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 16,
              "line": 2,
            },
            "start": {
              "column": 12,
              "line": 2,
            },
          },
        },
        "nodeType": "TypeDefinitionStatement",
        "position": {
          "end": {
            "column": 8,
            "line": 10,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "properties": {},
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 11,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 11,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements TypeDefinitionStatements should parse TypeDefinitionStatements with multiple Properties 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "methods": {},
        "name": {
          "content": "Type",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 16,
              "line": 2,
            },
            "start": {
              "column": 12,
              "line": 2,
            },
          },
        },
        "nodeType": "TypeDefinitionStatement",
        "position": {
          "end": {
            "column": 8,
            "line": 5,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "properties": {
          "property": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 22,
                "line": 3,
              },
              "start": {
                "column": 18,
                "line": 3,
              },
            },
            "type": {
              "content": "Type",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 22,
                  "line": 3,
                },
                "start": {
                  "column": 18,
                  "line": 3,
                },
              },
            },
          },
          "property2": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 24,
                "line": 4,
              },
              "start": {
                "column": 19,
                "line": 4,
              },
            },
            "type": {
              "content": "Type2",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 24,
                  "line": 4,
                },
                "start": {
                  "column": 19,
                  "line": 4,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 6,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 6,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements TypeDefinitionStatements should parse TypeDefinitionStatements with one Method 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "methods": {
          "method": {
            "method": {
              "nodeType": "FunctionValue",
              "position": {
                "end": {
                  "column": 9,
                  "line": 5,
                },
                "start": {
                  "column": 14,
                  "line": 3,
                },
              },
              "value": {
                "body": [
                  {
                    "expression": {
                      "content": "parameter",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 21,
                          "line": 4,
                        },
                        "start": {
                          "column": 12,
                          "line": 4,
                        },
                      },
                    },
                    "nodeType": "ReturnStatement",
                    "position": {
                      "end": {
                        "column": 21,
                        "line": 4,
                      },
                      "start": {
                        "column": 9,
                        "line": 4,
                      },
                    },
                  },
                ],
                "nodeType": "FunctionDefinition",
                "parameters": [
                  {
                    "externalName": {
                      "content": "parameter",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 24,
                          "line": 3,
                        },
                        "start": {
                          "column": 15,
                          "line": 3,
                        },
                      },
                    },
                    "internalName": {
                      "content": "parameter",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 24,
                          "line": 3,
                        },
                        "start": {
                          "column": 15,
                          "line": 3,
                        },
                      },
                    },
                    "nodeType": "Parameter",
                    "position": {
                      "end": {
                        "column": 30,
                        "line": 3,
                      },
                      "start": {
                        "column": 15,
                        "line": 3,
                      },
                    },
                    "type": {
                      "nodeType": "IdentifierTypeDeclaration",
                      "position": {
                        "end": {
                          "column": 30,
                          "line": 3,
                        },
                        "start": {
                          "column": 26,
                          "line": 3,
                        },
                      },
                      "type": {
                        "content": "Type",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 30,
                            "line": 3,
                          },
                          "start": {
                            "column": 26,
                            "line": 3,
                          },
                        },
                      },
                    },
                  },
                ],
                "returnType": {
                  "nodeType": "IdentifierTypeDeclaration",
                  "position": {
                    "end": {
                      "column": 39,
                      "line": 3,
                    },
                    "start": {
                      "column": 35,
                      "line": 3,
                    },
                  },
                  "type": {
                    "content": "Type",
                    "nodeType": "Identifier",
                    "position": {
                      "end": {
                        "column": 39,
                        "line": 3,
                      },
                      "start": {
                        "column": 35,
                        "line": 3,
                      },
                    },
                  },
                },
              },
            },
            "nodeType": "SimpleMethod",
          },
        },
        "name": {
          "content": "Type",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 16,
              "line": 2,
            },
            "start": {
              "column": 12,
              "line": 2,
            },
          },
        },
        "nodeType": "TypeDefinitionStatement",
        "position": {
          "end": {
            "column": 8,
            "line": 6,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "properties": {},
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 7,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 7,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements TypeDefinitionStatements should parse TypeDefinitionStatements with one Property 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "methods": {},
        "name": {
          "content": "Type",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 16,
              "line": 2,
            },
            "start": {
              "column": 12,
              "line": 2,
            },
          },
        },
        "nodeType": "TypeDefinitionStatement",
        "position": {
          "end": {
            "column": 8,
            "line": 4,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "properties": {
          "property": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 22,
                "line": 3,
              },
              "start": {
                "column": 18,
                "line": 3,
              },
            },
            "type": {
              "content": "Type",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 22,
                  "line": 3,
                },
                "start": {
                  "column": 18,
                  "line": 3,
                },
              },
            },
          },
        },
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 5,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 5,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements TypeDefinitionStatements should parse TypeDefinitionStatements with one static Method 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "methods": {
          "method": {
            "method": {
              "nodeType": "FunctionValue",
              "position": {
                "end": {
                  "column": 9,
                  "line": 5,
                },
                "start": {
                  "column": 21,
                  "line": 3,
                },
              },
              "value": {
                "body": [
                  {
                    "expression": {
                      "content": "parameter",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 21,
                          "line": 4,
                        },
                        "start": {
                          "column": 12,
                          "line": 4,
                        },
                      },
                    },
                    "nodeType": "ReturnStatement",
                    "position": {
                      "end": {
                        "column": 21,
                        "line": 4,
                      },
                      "start": {
                        "column": 9,
                        "line": 4,
                      },
                    },
                  },
                ],
                "nodeType": "FunctionDefinition",
                "parameters": [
                  {
                    "externalName": {
                      "content": "parameter",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 31,
                          "line": 3,
                        },
                        "start": {
                          "column": 22,
                          "line": 3,
                        },
                      },
                    },
                    "internalName": {
                      "content": "parameter",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 31,
                          "line": 3,
                        },
                        "start": {
                          "column": 22,
                          "line": 3,
                        },
                      },
                    },
                    "nodeType": "Parameter",
                    "position": {
                      "end": {
                        "column": 37,
                        "line": 3,
                      },
                      "start": {
                        "column": 22,
                        "line": 3,
                      },
                    },
                    "type": {
                      "nodeType": "IdentifierTypeDeclaration",
                      "position": {
                        "end": {
                          "column": 37,
                          "line": 3,
                        },
                        "start": {
                          "column": 33,
                          "line": 3,
                        },
                      },
                      "type": {
                        "content": "Type",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 37,
                            "line": 3,
                          },
                          "start": {
                            "column": 33,
                            "line": 3,
                          },
                        },
                      },
                    },
                  },
                ],
                "returnType": {
                  "nodeType": "IdentifierTypeDeclaration",
                  "position": {
                    "end": {
                      "column": 46,
                      "line": 3,
                    },
                    "start": {
                      "column": 42,
                      "line": 3,
                    },
                  },
                  "type": {
                    "content": "Type",
                    "nodeType": "Identifier",
                    "position": {
                      "end": {
                        "column": 46,
                        "line": 3,
                      },
                      "start": {
                        "column": 42,
                        "line": 3,
                      },
                    },
                  },
                },
              },
            },
            "nodeType": "StaticMethod",
          },
        },
        "name": {
          "content": "Type",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 16,
              "line": 2,
            },
            "start": {
              "column": 12,
              "line": 2,
            },
          },
        },
        "nodeType": "TypeDefinitionStatement",
        "position": {
          "end": {
            "column": 8,
            "line": 6,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "properties": {},
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 7,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 7,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements TypeDefinitionStatements should parse TypeDefinitionStatements with overloaded Methods 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "methods": {
          "method": {
            "methods": [
              {
                "nodeType": "FunctionValue",
                "position": {
                  "end": {
                    "column": 9,
                    "line": 5,
                  },
                  "start": {
                    "column": 23,
                    "line": 3,
                  },
                },
                "value": {
                  "body": [
                    {
                      "expression": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 21,
                            "line": 4,
                          },
                          "start": {
                            "column": 12,
                            "line": 4,
                          },
                        },
                      },
                      "nodeType": "ReturnStatement",
                      "position": {
                        "end": {
                          "column": 21,
                          "line": 4,
                        },
                        "start": {
                          "column": 9,
                          "line": 4,
                        },
                      },
                    },
                  ],
                  "nodeType": "FunctionDefinition",
                  "parameters": [
                    {
                      "externalName": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 33,
                            "line": 3,
                          },
                          "start": {
                            "column": 24,
                            "line": 3,
                          },
                        },
                      },
                      "internalName": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 33,
                            "line": 3,
                          },
                          "start": {
                            "column": 24,
                            "line": 3,
                          },
                        },
                      },
                      "nodeType": "Parameter",
                      "position": {
                        "end": {
                          "column": 39,
                          "line": 3,
                        },
                        "start": {
                          "column": 24,
                          "line": 3,
                        },
                      },
                      "type": {
                        "nodeType": "IdentifierTypeDeclaration",
                        "position": {
                          "end": {
                            "column": 39,
                            "line": 3,
                          },
                          "start": {
                            "column": 35,
                            "line": 3,
                          },
                        },
                        "type": {
                          "content": "Type",
                          "nodeType": "Identifier",
                          "position": {
                            "end": {
                              "column": 39,
                              "line": 3,
                            },
                            "start": {
                              "column": 35,
                              "line": 3,
                            },
                          },
                        },
                      },
                    },
                  ],
                  "returnType": {
                    "nodeType": "IdentifierTypeDeclaration",
                    "position": {
                      "end": {
                        "column": 48,
                        "line": 3,
                      },
                      "start": {
                        "column": 44,
                        "line": 3,
                      },
                    },
                    "type": {
                      "content": "Type",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 48,
                          "line": 3,
                        },
                        "start": {
                          "column": 44,
                          "line": 3,
                        },
                      },
                    },
                  },
                },
              },
              {
                "nodeType": "FunctionValue",
                "position": {
                  "end": {
                    "column": 9,
                    "line": 9,
                  },
                  "start": {
                    "column": 23,
                    "line": 7,
                  },
                },
                "value": {
                  "body": [
                    {
                      "expression": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 21,
                            "line": 8,
                          },
                          "start": {
                            "column": 12,
                            "line": 8,
                          },
                        },
                      },
                      "nodeType": "ReturnStatement",
                      "position": {
                        "end": {
                          "column": 21,
                          "line": 8,
                        },
                        "start": {
                          "column": 9,
                          "line": 8,
                        },
                      },
                    },
                  ],
                  "nodeType": "FunctionDefinition",
                  "parameters": [
                    {
                      "externalName": {
                        "content": "name",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 28,
                            "line": 7,
                          },
                          "start": {
                            "column": 24,
                            "line": 7,
                          },
                        },
                      },
                      "internalName": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 38,
                            "line": 7,
                          },
                          "start": {
                            "column": 29,
                            "line": 7,
                          },
                        },
                      },
                      "nodeType": "Parameter",
                      "position": {
                        "end": {
                          "column": 44,
                          "line": 7,
                        },
                        "start": {
                          "column": 24,
                          "line": 7,
                        },
                      },
                      "type": {
                        "nodeType": "IdentifierTypeDeclaration",
                        "position": {
                          "end": {
                            "column": 44,
                            "line": 7,
                          },
                          "start": {
                            "column": 40,
                            "line": 7,
                          },
                        },
                        "type": {
                          "content": "Type",
                          "nodeType": "Identifier",
                          "position": {
                            "end": {
                              "column": 44,
                              "line": 7,
                            },
                            "start": {
                              "column": 40,
                              "line": 7,
                            },
                          },
                        },
                      },
                    },
                  ],
                  "returnType": {
                    "nodeType": "IdentifierTypeDeclaration",
                    "position": {
                      "end": {
                        "column": 53,
                        "line": 7,
                      },
                      "start": {
                        "column": 49,
                        "line": 7,
                      },
                    },
                    "type": {
                      "content": "Type",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 53,
                          "line": 7,
                        },
                        "start": {
                          "column": 49,
                          "line": 7,
                        },
                      },
                    },
                  },
                },
              },
            ],
            "nodeType": "OverloadedMethod",
          },
        },
        "name": {
          "content": "Type",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 16,
              "line": 2,
            },
            "start": {
              "column": 12,
              "line": 2,
            },
          },
        },
        "nodeType": "TypeDefinitionStatement",
        "position": {
          "end": {
            "column": 8,
            "line": 10,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "properties": {},
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 11,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 11,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements TypeDefinitionStatements should parse TypeDefinitionStatements with overloaded static Methods 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "methods": {
          "method": {
            "methods": [
              {
                "nodeType": "FunctionValue",
                "position": {
                  "end": {
                    "column": 9,
                    "line": 5,
                  },
                  "start": {
                    "column": 30,
                    "line": 3,
                  },
                },
                "value": {
                  "body": [
                    {
                      "expression": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 21,
                            "line": 4,
                          },
                          "start": {
                            "column": 12,
                            "line": 4,
                          },
                        },
                      },
                      "nodeType": "ReturnStatement",
                      "position": {
                        "end": {
                          "column": 21,
                          "line": 4,
                        },
                        "start": {
                          "column": 9,
                          "line": 4,
                        },
                      },
                    },
                  ],
                  "nodeType": "FunctionDefinition",
                  "parameters": [
                    {
                      "externalName": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 40,
                            "line": 3,
                          },
                          "start": {
                            "column": 31,
                            "line": 3,
                          },
                        },
                      },
                      "internalName": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 40,
                            "line": 3,
                          },
                          "start": {
                            "column": 31,
                            "line": 3,
                          },
                        },
                      },
                      "nodeType": "Parameter",
                      "position": {
                        "end": {
                          "column": 46,
                          "line": 3,
                        },
                        "start": {
                          "column": 31,
                          "line": 3,
                        },
                      },
                      "type": {
                        "nodeType": "IdentifierTypeDeclaration",
                        "position": {
                          "end": {
                            "column": 46,
                            "line": 3,
                          },
                          "start": {
                            "column": 42,
                            "line": 3,
                          },
                        },
                        "type": {
                          "content": "Type",
                          "nodeType": "Identifier",
                          "position": {
                            "end": {
                              "column": 46,
                              "line": 3,
                            },
                            "start": {
                              "column": 42,
                              "line": 3,
                            },
                          },
                        },
                      },
                    },
                  ],
                  "returnType": {
                    "nodeType": "IdentifierTypeDeclaration",
                    "position": {
                      "end": {
                        "column": 55,
                        "line": 3,
                      },
                      "start": {
                        "column": 51,
                        "line": 3,
                      },
                    },
                    "type": {
                      "content": "Type",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 55,
                          "line": 3,
                        },
                        "start": {
                          "column": 51,
                          "line": 3,
                        },
                      },
                    },
                  },
                },
              },
              {
                "nodeType": "FunctionValue",
                "position": {
                  "end": {
                    "column": 9,
                    "line": 9,
                  },
                  "start": {
                    "column": 30,
                    "line": 7,
                  },
                },
                "value": {
                  "body": [
                    {
                      "expression": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 21,
                            "line": 8,
                          },
                          "start": {
                            "column": 12,
                            "line": 8,
                          },
                        },
                      },
                      "nodeType": "ReturnStatement",
                      "position": {
                        "end": {
                          "column": 21,
                          "line": 8,
                        },
                        "start": {
                          "column": 9,
                          "line": 8,
                        },
                      },
                    },
                  ],
                  "nodeType": "FunctionDefinition",
                  "parameters": [
                    {
                      "externalName": {
                        "content": "name",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 35,
                            "line": 7,
                          },
                          "start": {
                            "column": 31,
                            "line": 7,
                          },
                        },
                      },
                      "internalName": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 45,
                            "line": 7,
                          },
                          "start": {
                            "column": 36,
                            "line": 7,
                          },
                        },
                      },
                      "nodeType": "Parameter",
                      "position": {
                        "end": {
                          "column": 51,
                          "line": 7,
                        },
                        "start": {
                          "column": 31,
                          "line": 7,
                        },
                      },
                      "type": {
                        "nodeType": "IdentifierTypeDeclaration",
                        "position": {
                          "end": {
                            "column": 51,
                            "line": 7,
                          },
                          "start": {
                            "column": 47,
                            "line": 7,
                          },
                        },
                        "type": {
                          "content": "Type",
                          "nodeType": "Identifier",
                          "position": {
                            "end": {
                              "column": 51,
                              "line": 7,
                            },
                            "start": {
                              "column": 47,
                              "line": 7,
                            },
                          },
                        },
                      },
                    },
                  ],
                  "returnType": {
                    "nodeType": "IdentifierTypeDeclaration",
                    "position": {
                      "end": {
                        "column": 60,
                        "line": 7,
                      },
                      "start": {
                        "column": 56,
                        "line": 7,
                      },
                    },
                    "type": {
                      "content": "Type",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 60,
                          "line": 7,
                        },
                        "start": {
                          "column": 56,
                          "line": 7,
                        },
                      },
                    },
                  },
                },
              },
            ],
            "nodeType": "OverloadedStaticMethod",
          },
        },
        "name": {
          "content": "Type",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 16,
              "line": 2,
            },
            "start": {
              "column": 12,
              "line": 2,
            },
          },
        },
        "nodeType": "TypeDefinitionStatement",
        "position": {
          "end": {
            "column": 8,
            "line": 10,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "properties": {},
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 11,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 11,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements TypeDefinitionStatements should parse TypeDefinitionStatements with twice overloaded Methods 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "methods": {
          "method": {
            "methods": [
              {
                "nodeType": "FunctionValue",
                "position": {
                  "end": {
                    "column": 9,
                    "line": 5,
                  },
                  "start": {
                    "column": 23,
                    "line": 3,
                  },
                },
                "value": {
                  "body": [
                    {
                      "expression": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 21,
                            "line": 4,
                          },
                          "start": {
                            "column": 12,
                            "line": 4,
                          },
                        },
                      },
                      "nodeType": "ReturnStatement",
                      "position": {
                        "end": {
                          "column": 21,
                          "line": 4,
                        },
                        "start": {
                          "column": 9,
                          "line": 4,
                        },
                      },
                    },
                  ],
                  "nodeType": "FunctionDefinition",
                  "parameters": [
                    {
                      "externalName": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 33,
                            "line": 3,
                          },
                          "start": {
                            "column": 24,
                            "line": 3,
                          },
                        },
                      },
                      "internalName": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 33,
                            "line": 3,
                          },
                          "start": {
                            "column": 24,
                            "line": 3,
                          },
                        },
                      },
                      "nodeType": "Parameter",
                      "position": {
                        "end": {
                          "column": 39,
                          "line": 3,
                        },
                        "start": {
                          "column": 24,
                          "line": 3,
                        },
                      },
                      "type": {
                        "nodeType": "IdentifierTypeDeclaration",
                        "position": {
                          "end": {
                            "column": 39,
                            "line": 3,
                          },
                          "start": {
                            "column": 35,
                            "line": 3,
                          },
                        },
                        "type": {
                          "content": "Type",
                          "nodeType": "Identifier",
                          "position": {
                            "end": {
                              "column": 39,
                              "line": 3,
                            },
                            "start": {
                              "column": 35,
                              "line": 3,
                            },
                          },
                        },
                      },
                    },
                  ],
                  "returnType": {
                    "nodeType": "IdentifierTypeDeclaration",
                    "position": {
                      "end": {
                        "column": 48,
                        "line": 3,
                      },
                      "start": {
                        "column": 44,
                        "line": 3,
                      },
                    },
                    "type": {
                      "content": "Type",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 48,
                          "line": 3,
                        },
                        "start": {
                          "column": 44,
                          "line": 3,
                        },
                      },
                    },
                  },
                },
              },
              {
                "nodeType": "FunctionValue",
                "position": {
                  "end": {
                    "column": 9,
                    "line": 9,
                  },
                  "start": {
                    "column": 23,
                    "line": 7,
                  },
                },
                "value": {
                  "body": [
                    {
                      "expression": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 21,
                            "line": 8,
                          },
                          "start": {
                            "column": 12,
                            "line": 8,
                          },
                        },
                      },
                      "nodeType": "ReturnStatement",
                      "position": {
                        "end": {
                          "column": 21,
                          "line": 8,
                        },
                        "start": {
                          "column": 9,
                          "line": 8,
                        },
                      },
                    },
                  ],
                  "nodeType": "FunctionDefinition",
                  "parameters": [
                    {
                      "externalName": {
                        "content": "name",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 28,
                            "line": 7,
                          },
                          "start": {
                            "column": 24,
                            "line": 7,
                          },
                        },
                      },
                      "internalName": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 38,
                            "line": 7,
                          },
                          "start": {
                            "column": 29,
                            "line": 7,
                          },
                        },
                      },
                      "nodeType": "Parameter",
                      "position": {
                        "end": {
                          "column": 44,
                          "line": 7,
                        },
                        "start": {
                          "column": 24,
                          "line": 7,
                        },
                      },
                      "type": {
                        "nodeType": "IdentifierTypeDeclaration",
                        "position": {
                          "end": {
                            "column": 44,
                            "line": 7,
                          },
                          "start": {
                            "column": 40,
                            "line": 7,
                          },
                        },
                        "type": {
                          "content": "Type",
                          "nodeType": "Identifier",
                          "position": {
                            "end": {
                              "column": 44,
                              "line": 7,
                            },
                            "start": {
                              "column": 40,
                              "line": 7,
                            },
                          },
                        },
                      },
                    },
                  ],
                  "returnType": {
                    "nodeType": "IdentifierTypeDeclaration",
                    "position": {
                      "end": {
                        "column": 53,
                        "line": 7,
                      },
                      "start": {
                        "column": 49,
                        "line": 7,
                      },
                    },
                    "type": {
                      "content": "Type",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 53,
                          "line": 7,
                        },
                        "start": {
                          "column": 49,
                          "line": 7,
                        },
                      },
                    },
                  },
                },
              },
              {
                "nodeType": "FunctionValue",
                "position": {
                  "end": {
                    "column": 9,
                    "line": 13,
                  },
                  "start": {
                    "column": 23,
                    "line": 11,
                  },
                },
                "value": {
                  "body": [
                    {
                      "expression": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 21,
                            "line": 12,
                          },
                          "start": {
                            "column": 12,
                            "line": 12,
                          },
                        },
                      },
                      "nodeType": "ReturnStatement",
                      "position": {
                        "end": {
                          "column": 21,
                          "line": 12,
                        },
                        "start": {
                          "column": 9,
                          "line": 12,
                        },
                      },
                    },
                  ],
                  "nodeType": "FunctionDefinition",
                  "parameters": [
                    {
                      "externalName": {
                        "content": "item",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 28,
                            "line": 11,
                          },
                          "start": {
                            "column": 24,
                            "line": 11,
                          },
                        },
                      },
                      "internalName": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 38,
                            "line": 11,
                          },
                          "start": {
                            "column": 29,
                            "line": 11,
                          },
                        },
                      },
                      "nodeType": "Parameter",
                      "position": {
                        "end": {
                          "column": 44,
                          "line": 11,
                        },
                        "start": {
                          "column": 24,
                          "line": 11,
                        },
                      },
                      "type": {
                        "nodeType": "IdentifierTypeDeclaration",
                        "position": {
                          "end": {
                            "column": 44,
                            "line": 11,
                          },
                          "start": {
                            "column": 40,
                            "line": 11,
                          },
                        },
                        "type": {
                          "content": "Type",
                          "nodeType": "Identifier",
                          "position": {
                            "end": {
                              "column": 44,
                              "line": 11,
                            },
                            "start": {
                              "column": 40,
                              "line": 11,
                            },
                          },
                        },
                      },
                    },
                  ],
                  "returnType": {
                    "nodeType": "IdentifierTypeDeclaration",
                    "position": {
                      "end": {
                        "column": 53,
                        "line": 11,
                      },
                      "start": {
                        "column": 49,
                        "line": 11,
                      },
                    },
                    "type": {
                      "content": "Type",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 53,
                          "line": 11,
                        },
                        "start": {
                          "column": 49,
                          "line": 11,
                        },
                      },
                    },
                  },
                },
              },
            ],
            "nodeType": "OverloadedMethod",
          },
        },
        "name": {
          "content": "Type",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 16,
              "line": 2,
            },
            "start": {
              "column": 12,
              "line": 2,
            },
          },
        },
        "nodeType": "TypeDefinitionStatement",
        "position": {
          "end": {
            "column": 8,
            "line": 14,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "properties": {},
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 15,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 15,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements TypeDefinitionStatements should parse TypeDefinitionStatements with twice overloaded static Methods 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "methods": {
          "method": {
            "methods": [
              {
                "nodeType": "FunctionValue",
                "position": {
                  "end": {
                    "column": 9,
                    "line": 5,
                  },
                  "start": {
                    "column": 30,
                    "line": 3,
                  },
                },
                "value": {
                  "body": [
                    {
                      "expression": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 21,
                            "line": 4,
                          },
                          "start": {
                            "column": 12,
                            "line": 4,
                          },
                        },
                      },
                      "nodeType": "ReturnStatement",
                      "position": {
                        "end": {
                          "column": 21,
                          "line": 4,
                        },
                        "start": {
                          "column": 9,
                          "line": 4,
                        },
                      },
                    },
                  ],
                  "nodeType": "FunctionDefinition",
                  "parameters": [
                    {
                      "externalName": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 40,
                            "line": 3,
                          },
                          "start": {
                            "column": 31,
                            "line": 3,
                          },
                        },
                      },
                      "internalName": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 40,
                            "line": 3,
                          },
                          "start": {
                            "column": 31,
                            "line": 3,
                          },
                        },
                      },
                      "nodeType": "Parameter",
                      "position": {
                        "end": {
                          "column": 46,
                          "line": 3,
                        },
                        "start": {
                          "column": 31,
                          "line": 3,
                        },
                      },
                      "type": {
                        "nodeType": "IdentifierTypeDeclaration",
                        "position": {
                          "end": {
                            "column": 46,
                            "line": 3,
                          },
                          "start": {
                            "column": 42,
                            "line": 3,
                          },
                        },
                        "type": {
                          "content": "Type",
                          "nodeType": "Identifier",
                          "position": {
                            "end": {
                              "column": 46,
                              "line": 3,
                            },
                            "start": {
                              "column": 42,
                              "line": 3,
                            },
                          },
                        },
                      },
                    },
                  ],
                  "returnType": {
                    "nodeType": "IdentifierTypeDeclaration",
                    "position": {
                      "end": {
                        "column": 55,
                        "line": 3,
                      },
                      "start": {
                        "column": 51,
                        "line": 3,
                      },
                    },
                    "type": {
                      "content": "Type",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 55,
                          "line": 3,
                        },
                        "start": {
                          "column": 51,
                          "line": 3,
                        },
                      },
                    },
                  },
                },
              },
              {
                "nodeType": "FunctionValue",
                "position": {
                  "end": {
                    "column": 9,
                    "line": 9,
                  },
                  "start": {
                    "column": 30,
                    "line": 7,
                  },
                },
                "value": {
                  "body": [
                    {
                      "expression": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 21,
                            "line": 8,
                          },
                          "start": {
                            "column": 12,
                            "line": 8,
                          },
                        },
                      },
                      "nodeType": "ReturnStatement",
                      "position": {
                        "end": {
                          "column": 21,
                          "line": 8,
                        },
                        "start": {
                          "column": 9,
                          "line": 8,
                        },
                      },
                    },
                  ],
                  "nodeType": "FunctionDefinition",
                  "parameters": [
                    {
                      "externalName": {
                        "content": "name",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 35,
                            "line": 7,
                          },
                          "start": {
                            "column": 31,
                            "line": 7,
                          },
                        },
                      },
                      "internalName": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 45,
                            "line": 7,
                          },
                          "start": {
                            "column": 36,
                            "line": 7,
                          },
                        },
                      },
                      "nodeType": "Parameter",
                      "position": {
                        "end": {
                          "column": 51,
                          "line": 7,
                        },
                        "start": {
                          "column": 31,
                          "line": 7,
                        },
                      },
                      "type": {
                        "nodeType": "IdentifierTypeDeclaration",
                        "position": {
                          "end": {
                            "column": 51,
                            "line": 7,
                          },
                          "start": {
                            "column": 47,
                            "line": 7,
                          },
                        },
                        "type": {
                          "content": "Type",
                          "nodeType": "Identifier",
                          "position": {
                            "end": {
                              "column": 51,
                              "line": 7,
                            },
                            "start": {
                              "column": 47,
                              "line": 7,
                            },
                          },
                        },
                      },
                    },
                  ],
                  "returnType": {
                    "nodeType": "IdentifierTypeDeclaration",
                    "position": {
                      "end": {
                        "column": 60,
                        "line": 7,
                      },
                      "start": {
                        "column": 56,
                        "line": 7,
                      },
                    },
                    "type": {
                      "content": "Type",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 60,
                          "line": 7,
                        },
                        "start": {
                          "column": 56,
                          "line": 7,
                        },
                      },
                    },
                  },
                },
              },
              {
                "nodeType": "FunctionValue",
                "position": {
                  "end": {
                    "column": 9,
                    "line": 13,
                  },
                  "start": {
                    "column": 30,
                    "line": 11,
                  },
                },
                "value": {
                  "body": [
                    {
                      "expression": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 21,
                            "line": 12,
                          },
                          "start": {
                            "column": 12,
                            "line": 12,
                          },
                        },
                      },
                      "nodeType": "ReturnStatement",
                      "position": {
                        "end": {
                          "column": 21,
                          "line": 12,
                        },
                        "start": {
                          "column": 9,
                          "line": 12,
                        },
                      },
                    },
                  ],
                  "nodeType": "FunctionDefinition",
                  "parameters": [
                    {
                      "externalName": {
                        "content": "item",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 35,
                            "line": 11,
                          },
                          "start": {
                            "column": 31,
                            "line": 11,
                          },
                        },
                      },
                      "internalName": {
                        "content": "parameter",
                        "nodeType": "Identifier",
                        "position": {
                          "end": {
                            "column": 45,
                            "line": 11,
                          },
                          "start": {
                            "column": 36,
                            "line": 11,
                          },
                        },
                      },
                      "nodeType": "Parameter",
                      "position": {
                        "end": {
                          "column": 51,
                          "line": 11,
                        },
                        "start": {
                          "column": 31,
                          "line": 11,
                        },
                      },
                      "type": {
                        "nodeType": "IdentifierTypeDeclaration",
                        "position": {
                          "end": {
                            "column": 51,
                            "line": 11,
                          },
                          "start": {
                            "column": 47,
                            "line": 11,
                          },
                        },
                        "type": {
                          "content": "Type",
                          "nodeType": "Identifier",
                          "position": {
                            "end": {
                              "column": 51,
                              "line": 11,
                            },
                            "start": {
                              "column": 47,
                              "line": 11,
                            },
                          },
                        },
                      },
                    },
                  ],
                  "returnType": {
                    "nodeType": "IdentifierTypeDeclaration",
                    "position": {
                      "end": {
                        "column": 60,
                        "line": 11,
                      },
                      "start": {
                        "column": 56,
                        "line": 11,
                      },
                    },
                    "type": {
                      "content": "Type",
                      "nodeType": "Identifier",
                      "position": {
                        "end": {
                          "column": 60,
                          "line": 11,
                        },
                        "start": {
                          "column": 56,
                          "line": 11,
                        },
                      },
                    },
                  },
                },
              },
            ],
            "nodeType": "OverloadedStaticMethod",
          },
        },
        "name": {
          "content": "Type",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 16,
              "line": 2,
            },
            "start": {
              "column": 12,
              "line": 2,
            },
          },
        },
        "nodeType": "TypeDefinitionStatement",
        "position": {
          "end": {
            "column": 8,
            "line": 14,
          },
          "start": {
            "column": 7,
            "line": 2,
          },
        },
        "properties": {},
      },
    ],
    "position": {
      "end": {
        "column": 7,
        "line": 15,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 7,
      "line": 15,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements TypeDefinitionStatements should parse an empty TypeDefinitionStatement 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "methods": {},
        "name": {
          "content": "Type",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 27,
              "line": 1,
            },
            "start": {
              "column": 23,
              "line": 1,
            },
          },
        },
        "nodeType": "TypeDefinitionStatement",
        "position": {
          "end": {
            "column": 30,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "properties": {},
      },
    ],
    "position": {
      "end": {
        "column": 32,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 32,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements VariableAssignmentStatements should parse VariableAssignmentStatement 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "name": {
          "content": "identifier",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 28,
              "line": 1,
            },
            "start": {
              "column": 18,
              "line": 1,
            },
          },
        },
        "nodeType": "VariableAssignmentStatement",
        "position": {
          "end": {
            "column": 33,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "value": {
          "nodeType": "StringValue",
          "position": {
            "end": {
              "column": 33,
              "line": 1,
            },
            "start": {
              "column": 31,
              "line": 1,
            },
          },
          "value": "",
        },
      },
    ],
    "position": {
      "end": {
        "column": 35,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 35,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements VariableDeclarationStatements should parse VariableDeclarationStatement with List Type 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "name": {
          "content": "identifiers",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 38,
              "line": 1,
            },
            "start": {
              "column": 27,
              "line": 1,
            },
          },
        },
        "nodeType": "VariableDeclarationStatement",
        "position": {
          "end": {
            "column": 53,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "type": {
          "nodeType": "ListTypeDeclaration",
          "position": {
            "end": {
              "column": 48,
              "line": 1,
            },
            "start": {
              "column": 40,
              "line": 1,
            },
          },
          "type": {
            "nodeType": "IdentifierTypeDeclaration",
            "position": {
              "end": {
                "column": 47,
                "line": 1,
              },
              "start": {
                "column": 41,
                "line": 1,
              },
            },
            "type": {
              "content": "String",
              "nodeType": "Identifier",
              "position": {
                "end": {
                  "column": 47,
                  "line": 1,
                },
                "start": {
                  "column": 41,
                  "line": 1,
                },
              },
            },
          },
        },
        "value": {
          "nodeType": "ListValue",
          "position": {
            "end": {
              "column": 53,
              "line": 1,
            },
            "start": {
              "column": 51,
              "line": 1,
            },
          },
          "values": [],
        },
      },
    ],
    "position": {
      "end": {
        "column": 55,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 55,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements VariableDeclarationStatements should parse VariableDeclarationStatement with Type 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "name": {
          "content": "identifier",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 37,
              "line": 1,
            },
            "start": {
              "column": 27,
              "line": 1,
            },
          },
        },
        "nodeType": "VariableDeclarationStatement",
        "position": {
          "end": {
            "column": 50,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "type": {
          "nodeType": "IdentifierTypeDeclaration",
          "position": {
            "end": {
              "column": 45,
              "line": 1,
            },
            "start": {
              "column": 39,
              "line": 1,
            },
          },
          "type": {
            "content": "String",
            "nodeType": "Identifier",
            "position": {
              "end": {
                "column": 45,
                "line": 1,
              },
              "start": {
                "column": 39,
                "line": 1,
              },
            },
          },
        },
        "value": {
          "nodeType": "StringValue",
          "position": {
            "end": {
              "column": 50,
              "line": 1,
            },
            "start": {
              "column": 48,
              "line": 1,
            },
          },
          "value": "",
        },
      },
    ],
    "position": {
      "end": {
        "column": 52,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 52,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;

exports[`Parser Statements VariableDeclarationStatements should parse VariableDeclarationStatement without Type 1`] = `
{
  "implementation": {
    "nodeType": "ImplementationSection",
    "nodes": [
      {
        "name": {
          "content": "identifier",
          "nodeType": "Identifier",
          "position": {
            "end": {
              "column": 37,
              "line": 1,
            },
            "start": {
              "column": 27,
              "line": 1,
            },
          },
        },
        "nodeType": "VariableDeclarationStatement",
        "position": {
          "end": {
            "column": 42,
            "line": 1,
          },
          "start": {
            "column": 18,
            "line": 1,
          },
        },
        "type": null,
        "value": {
          "nodeType": "StringValue",
          "position": {
            "end": {
              "column": 42,
              "line": 1,
            },
            "start": {
              "column": 40,
              "line": 1,
            },
          },
          "value": "",
        },
      },
    ],
    "position": {
      "end": {
        "column": 44,
        "line": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
      },
    },
  },
  "nodeType": "Program",
  "position": {
    "end": {
      "column": 44,
      "line": 1,
    },
    "start": {
      "column": 1,
      "line": 1,
    },
  },
}
`;
