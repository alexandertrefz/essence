#!/usr/bin/env node

const fs = require("fs")
const util = require("util")
const path = require("path")

const meow = require("meow")

const readFile = util.promisify(fs.readFile)
const writeFile = util.promisify(fs.writeFile)

const Parser = require("../lib/parser")
const Enricher = require("../lib/enricher")
const Validator = require("../lib/validator")
const Simplifier = require("../lib/simplifier")
const Optimiser = require("../lib/optimiser")
const Rewriter = require("../lib/rewriter")

async function compile(inputFileName, flags) {
	const sourceFileNameParsed = path.parse(inputFileName)
	const targetFileName = sourceFileNameParsed.dir + "/" + sourceFileNameParsed.name + ".js"

	const data = await readFile(inputFileName, "utf8")

	const initialAST = Parser.parse(data)
	const enrichedAST = Enricher.enrich(initialAST)
	const validatedAST = Validator.validate(enrichedAST)
	const simplifiedAST = Simplifier.simplify(validatedAST)
	const optimisedAST = Optimiser.optimise(simplifiedAST)
	const result = await Rewriter.rewrite(optimisedAST, flags.mode)

	await writeFile(targetFileName, result)

	console.log(`Successfully compiled ${inputFileName} -> ${targetFileName}`)
	return Promise.resolve()
}

const cli = meow(
	{
		help: `
			Usage
			    $ esc <fileName>

			Options
			    --mode Set the rewriter mode

			Examples
			    $ foo HelloWorld.es --mode js
		`,
		description: false,
	},
	{
		flags: {
			mode: {
				type: "string",
				default: "js",
			},
		},
	},
)

compile(cli.input[0], Object.assign({ mode: "js" }, cli.flags))
